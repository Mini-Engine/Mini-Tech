import Gaffer
import GafferOSL
import GafferScene
import IECore
import imath
import miniTech

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 2, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["CameraMatrixQuery"] = miniTech.CameraMatrixQuery( "CameraMatrixQuery" )
parent.addChild( __children["CameraMatrixQuery"] )
__children["CameraMatrixQuery"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLObject"] = GafferOSL.OSLObject( "OSLObject" )
parent.addChild( __children["OSLObject"] )
__children["OSLObject"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "customInt", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "primitiveVariable", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLObject"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"] = GafferOSL.OSLCode( "OSLCode" )
parent.addChild( __children["OSLCode"] )
__children["OSLCode"]["parameters"].addChild( Gaffer.M44fPlug( "cameraMatrix", defaultValue = imath.M44f( 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.FloatPlug( "overscan", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.IntPlug( "deletePoint", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DeletePoints"] = GafferScene.DeletePoints( "DeletePoints" )
parent.addChild( __children["DeletePoints"] )
__children["DeletePoints"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TimeWarp"] = Gaffer.TimeWarp( "TimeWarp" )
parent.addChild( __children["TimeWarp"] )
__children["TimeWarp"].setup( GafferScene.ScenePlug( "in", ) )
__children["TimeWarp"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot"] = Gaffer.Dot( "Dot" )
parent.addChild( __children["Dot"] )
__children["Dot"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["in"] = GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["in"] )
__children["Backdrop"] = Gaffer.Backdrop( "Backdrop" )
parent.addChild( __children["Backdrop"] )
__children["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DeletePrimitiveVariables"] = GafferScene.DeletePrimitiveVariables( "DeletePrimitiveVariables" )
parent.addChild( __children["DeletePrimitiveVariables"] )
__children["DeletePrimitiveVariables"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn"] = Gaffer.BoxIn( "BoxIn" )
parent.addChild( __children["BoxIn"] )
__children["BoxIn"].setup( GafferScene.ScenePlug( "out", ) )
__children["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxOut"] = Gaffer.BoxOut( "BoxOut" )
parent.addChild( __children["BoxOut"] )
__children["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["out"] = GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["out"] )
__children["enabled"] = Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["enabled"] )
__children["Dot1"] = Gaffer.Dot( "Dot1" )
parent.addChild( __children["Dot1"] )
__children["Dot1"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot1"].addChild( Gaffer.BoolPlug( "__uiInputConnectionsMinimised", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["cameraPath"] = Gaffer.StringPlug( "cameraPath", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["cameraPath"] )
__children["freezeFrame"] = Gaffer.FloatPlug( "freezeFrame", defaultValue = 1001.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["freezeFrame"] )
__children["BoxIn1"] = Gaffer.BoxIn( "BoxIn1" )
parent.addChild( __children["BoxIn1"] )
__children["BoxIn1"].setup( Gaffer.FloatPlug( "out", defaultValue = 0.0, ) )
__children["BoxIn1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["parameters_overscan"] = Gaffer.FloatPlug( "parameters_overscan", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["parameters_overscan"] )
__children["invertResult"] = Gaffer.BoolPlug( "invertResult", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["invertResult"] )
__children["BoxIn2"] = Gaffer.BoxIn( "BoxIn2" )
parent.addChild( __children["BoxIn2"] )
__children["BoxIn2"].setup( GafferScene.FilterPlug( "out", defaultValue = 0, minValue = 0, maxValue = 7, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.AcceptsDependencyCycles, ) )
__children["BoxIn2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["in1"] = GafferScene.FilterPlug( "in1", defaultValue = 0, minValue = 0, maxValue = 7, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.AcceptsDependencyCycles, )
parent.addChild( __children["in1"] )
__children["reTimeCamSpeed"] = Gaffer.FloatPlug( "reTimeCamSpeed", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["reTimeCamSpeed"] )
__children["CameraMatrixQuery"]["in"].setInput( __children["TimeWarp"]["out"] )
__children["CameraMatrixQuery"]["location"].setInput( __children["cameraPath"] )
__children["CameraMatrixQuery"]["cameraMatrix"].setInput( __children["CameraMatrixQuery"]["Expression"]["__out"]["p0"] )
__children["CameraMatrixQuery"]["__uiPosition"].setValue( imath.V2f( -8.54776001, -40.0869102 ) )
__children["OSLObject"]["in"].setInput( __children["Dot"]["out"] )
__children["OSLObject"]["filter"].setInput( __children["BoxIn2"]["out"] )
__children["OSLObject"]["adjustBounds"].setValue( False )
__children["OSLObject"]["useTransform"].setValue( True )
__children["OSLObject"]["primitiveVariables"]["primitiveVariable"]["name"].setValue( 'deletePoints' )
__children["OSLObject"]["primitiveVariables"]["primitiveVariable"]["value"].setInput( __children["OSLCode"]["out"]["deletePoint"] )
__children["OSLObject"]["__uiPosition"].setValue( imath.V2f( 20.1592751, -46.250721 ) )
__children["OSLCode"]["parameters"]["cameraMatrix"].setInput( __children["CameraMatrixQuery"]["cameraMatrix"] )
__children["OSLCode"]["parameters"]["overscan"].setInput( __children["BoxIn1"]["out"] )
__children["OSLCode"]["code"].setValue( '// transform P into world space\npoint Pworld = transform( "world", P );\n// transform world P into screen space\npoint Pscreen = transform( 1/cameraMatrix, Pworld );\n// our culling limit\nfloat limit = 1 + overscan;\n\n// do not delete by default\ndeletePoint = 0;\n\n// if the point is outside of the overscan region, then delete!!\nif( Pscreen[0] > limit || Pscreen[0] < -limit || Pscreen[1] > limit || Pscreen[1] < -limit || Pscreen[2] > 1 || Pscreen[2] < -1 )\n{\n\tdeletePoint = 1;\n}\n' )
__children["OSLCode"]["__uiPosition"].setValue( imath.V2f( 6.69711685, -45.6507225 ) )
__children["DeletePoints"]["in"].setInput( __children["OSLObject"]["out"] )
__children["DeletePoints"]["filter"].setInput( __children["BoxIn2"]["out"] )
__children["DeletePoints"]["adjustBounds"].setValue( False )
__children["DeletePoints"]["invert"].setInput( __children["invertResult"] )
__children["DeletePoints"]["ignoreMissingVariable"].setValue( True )
__children["DeletePoints"]["__uiPosition"].setValue( imath.V2f( 20.1600876, -54.7327538 ) )
Gaffer.Metadata.registerValue( __children["TimeWarp"], 'annotation:user:text', "Timewarp camera to whole frame so \nculling doesn't change across the shutter." )
Gaffer.Metadata.registerValue( __children["TimeWarp"], 'annotation:user:color', imath.Color3f( 0.150000006, 0.25999999, 0.25999999 ) )
__children["TimeWarp"]["speed"].setInput( __children["reTimeCamSpeed"] )
__children["TimeWarp"]["offset"].setInput( __children["freezeFrame"] )
__children["TimeWarp"]["in"].setInput( __children["Dot"]["out"] )
Gaffer.Metadata.registerValue( __children["TimeWarp"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["TimeWarp"]["out"], 'noduleLayout:section', 'bottom' )
__children["TimeWarp"]["__uiPosition"].setValue( imath.V2f( -8.54776001, -31.754879 ) )
__children["Dot"]["in"].setInput( __children["BoxIn"]["out"] )
__children["Dot"]["__uiPosition"].setValue( imath.V2f( 20.1592751, -24.4228477 ) )
Gaffer.Metadata.registerValue( __children["in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["in"], 'layout:index', 0 )
__children["Backdrop"]["title"].setValue( 'Camera Culling' )
__children["Backdrop"]["__uiPosition"].setValue( imath.V2f( 10.8544483, -39.9938164 ) )
__children["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -30.8048267, -29.2021675 ), imath.V2f( 36.8048248, 25.8209686 ) ) )
__children["DeletePrimitiveVariables"]["in"].setInput( __children["DeletePoints"]["out"] )
__children["DeletePrimitiveVariables"]["filter"].setInput( __children["BoxIn2"]["out"] )
__children["DeletePrimitiveVariables"]["names"].setValue( 'deletePoints' )
__children["DeletePrimitiveVariables"]["__uiPosition"].setValue( imath.V2f( 20.1592598, -62.8968163 ) )
__children["BoxIn"]["__in"].setInput( __children["in"] )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'plugValueWidget:type', '' )
__children["BoxIn"]["__uiPosition"].setValue( imath.V2f( 20.1592751, -1.90392733 ) )
__children["BoxOut"]["in"].setInput( __children["DeletePrimitiveVariables"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'noduleLayout:spacing', 2.0 )
__children["BoxOut"]["passThrough"].setInput( __children["Dot1"]["out"] )
__children["BoxOut"]["enabled"].setInput( __children["enabled"] )
__children["BoxOut"]["__uiPosition"].setValue( imath.V2f( 21.6592598, -87.8924789 ) )
__children["out"].setInput( __children["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["out"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["out"], 'noduleLayout:spacing', 2.0 )
Gaffer.Metadata.registerValue( __children["out"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:index', 1 )
Gaffer.Metadata.registerValue( __children["enabled"], 'layout:section', 'Node' )
Gaffer.Metadata.registerValue( __children["enabled"], 'layout:index', 8 )
__children["Dot1"]["in"].setInput( __children["BoxIn"]["out"] )
__children["Dot1"]["__uiPosition"].setValue( imath.V2f( 31.5358868, -80.3924789 ) )
__children["Dot1"]["__uiInputConnectionsMinimised"].setValue( True )
Gaffer.Metadata.registerValue( __children["cameraPath"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["cameraPath"], 'description', 'The location of the camera to query.' )
Gaffer.Metadata.registerValue( __children["cameraPath"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["cameraPath"], 'layout:index', 2 )
Gaffer.Metadata.registerValue( __children["freezeFrame"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["freezeFrame"], 'description', 'Adds to the current frame value (after multiplication with speed).' )
Gaffer.Metadata.registerValue( __children["freezeFrame"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["freezeFrame"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["freezeFrame"], 'layout:index', 6 )
__children["BoxIn1"]["name"].setValue( 'parameters_overscan' )
__children["BoxIn1"]["__in"].setInput( __children["parameters_overscan"] )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'label', 'overscan' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn1"]["__uiPosition"].setValue( imath.V2f( -9.67737389, -60.4987259 ) )
Gaffer.Metadata.registerValue( __children["parameters_overscan"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["parameters_overscan"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["parameters_overscan"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["parameters_overscan"], 'description', '' )
Gaffer.Metadata.registerValue( __children["parameters_overscan"], 'label', 'overscan' )
Gaffer.Metadata.registerValue( __children["parameters_overscan"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["parameters_overscan"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["parameters_overscan"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["parameters_overscan"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["parameters_overscan"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["parameters_overscan"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["parameters_overscan"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["parameters_overscan"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["parameters_overscan"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["parameters_overscan"], 'layout:index', 3 )
Gaffer.Metadata.registerValue( __children["parameters_overscan"], 'divider', True )
Gaffer.Metadata.registerValue( __children["invertResult"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["invertResult"], 'description', 'Invert the condition used to delete points. If the primvar is zero then the point will be deleted.' )
Gaffer.Metadata.registerValue( __children["invertResult"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["invertResult"], 'layout:index', 4 )
Gaffer.Metadata.registerValue( __children["invertResult"], 'divider', True )
__children["BoxIn2"]["name"].setValue( 'in1' )
__children["BoxIn2"]["__in"].setInput( __children["in1"] )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'description', 'The result of the filter. This should be connected into\nthe "filter" plug of a FilteredSceneProcessor.' )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["out"], 'noduleLayout:section', 'left' )
__children["BoxIn2"]["__uiPosition"].setValue( imath.V2f( 55.7284813, -46.250721 ) )
Gaffer.Metadata.registerValue( __children["in1"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["in1"], 'description', 'The result of the filter. This should be connected into\nthe "filter" plug of a FilteredSceneProcessor.' )
Gaffer.Metadata.registerValue( __children["in1"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["in1"], 'noduleLayout:section', 'right' )
Gaffer.Metadata.registerValue( __children["in1"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["in1"], 'layout:index', 7 )
Gaffer.Metadata.registerValue( __children["reTimeCamSpeed"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["reTimeCamSpeed"], 'description', 'Multiplies the current frame value.' )
Gaffer.Metadata.registerValue( __children["reTimeCamSpeed"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["reTimeCamSpeed"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["reTimeCamSpeed"], 'layout:index', 5 )
Gaffer.Metadata.registerValue( parent, 'icon', 'mini.png' )
Gaffer.Metadata.registerValue( parent, 'nodeGadget:color', imath.Color3f( 0.25, 0.349999964, 0.5 ) )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )


del __children

