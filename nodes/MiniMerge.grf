import Gaffer
import GafferScene
import MiniGaffer
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["MiniMergeGeometry"] = MiniGaffer.MiniMergeGeometry( "MiniMergeGeometry" )
parent.addChild( __children["MiniMergeGeometry"] )
__children["MiniMergeGeometry"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn"] = Gaffer.BoxIn( "BoxIn" )
parent.addChild( __children["BoxIn"] )
__children["BoxIn"].setup( GafferScene.ScenePlug( "out", ) )
__children["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["in"] = GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["in"] )
__children["BoxOut"] = Gaffer.BoxOut( "BoxOut" )
parent.addChild( __children["BoxOut"] )
__children["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["out"] = GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["out"] )
__children["BoxIn1"] = Gaffer.BoxIn( "BoxIn1" )
parent.addChild( __children["BoxIn1"] )
__children["BoxIn1"].setup( GafferScene.FilterPlug( "out", defaultValue = 0, minValue = 0, maxValue = 7, ) )
__children["BoxIn1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["filter"] = GafferScene.FilterPlug( "filter", defaultValue = 0, minValue = 0, maxValue = 7, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["filter"] )
__children["Parent"] = GafferScene.Parent( "Parent" )
parent.addChild( __children["Parent"] )
__children["Parent"]["children"].addChild( GafferScene.ScenePlug( "child1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Parent"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["parent"] = Gaffer.StringPlug( "parent", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["parent"] )
__children["Prune"] = GafferScene.Prune( "Prune" )
parent.addChild( __children["Prune"] )
__children["Prune"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["mergedName"] = Gaffer.StringPlug( "mergedName", defaultValue = 'merged', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["mergedName"] )
__children["MiniMergeGeometry"]["in"].setInput( __children["BoxIn"]["out"] )
__children["MiniMergeGeometry"]["filter"].setInput( __children["BoxIn1"]["out"] )
__children["MiniMergeGeometry"]["mergedName"].setInput( __children["mergedName"] )
__children["MiniMergeGeometry"]["__uiPosition"].setValue( imath.V2f( -43.4795227, -16.0008354 ) )
__children["BoxIn"]["__in"].setInput( __children["in"] )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:spacing', 2.0 )
Gaffer.Metadata.registerValue( __children["BoxIn"]["out"], 'noduleLayout:section', 'bottom' )
__children["BoxIn"]["__uiPosition"].setValue( imath.V2f( -91.3000107, 11.4499998 ) )
Gaffer.Metadata.registerValue( __children["in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["in"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["in"], 'noduleLayout:spacing', 2.0 )
Gaffer.Metadata.registerValue( __children["in"], 'noduleLayout:section', 'top' )
__children["BoxOut"]["in"].setInput( __children["Parent"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["passThrough"], 'noduleLayout:section', 'top' )
__children["BoxOut"]["__uiPosition"].setValue( imath.V2f( -39.9000015, -50.0174904 ) )
__children["out"].setInput( __children["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["out"], 'noduleLayout:section', 'bottom' )
__children["BoxIn1"]["name"].setValue( 'filter' )
__children["BoxIn1"]["__in"].setInput( __children["filter"] )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'description', 'Filter to specify the branches to prune. The specified\nlocations and all locations below them will be removed from\nthe scene.' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'noduleLayout:section', 'right' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'plugValueWidget:type', 'GafferSceneUI.FilterPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["out"], 'noduleLayout:section', 'left' )
__children["BoxIn1"]["__uiPosition"].setValue( imath.V2f( -9.30911064, -0.289035797 ) )
Gaffer.Metadata.registerValue( __children["filter"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["filter"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["filter"], 'description', 'Filter to specify the branches to prune. The specified\nlocations and all locations below them will be removed from\nthe scene.' )
Gaffer.Metadata.registerValue( __children["filter"], 'noduleLayout:section', 'right' )
Gaffer.Metadata.registerValue( __children["filter"], 'plugValueWidget:type', 'GafferSceneUI.FilterPlugValueWidget' )
__children["Parent"]["in"].setInput( __children["Prune"]["out"] )
__children["Parent"]["parent"].setInput( __children["parent"] )
__children["Parent"]["children"][0].setInput( __children["MiniMergeGeometry"]["out"] )
__children["Parent"]["__uiPosition"].setValue( imath.V2f( -68.8231049, -37.0799294 ) )
Gaffer.Metadata.registerValue( __children["parent"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["parent"], 'plugValueWidget:type', 'GafferSceneUI.ScenePathPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["parent"], 'description', 'The location which the children are parented under. This is\nignored when a filter is connected, in which case the children\nare parented under all the locations matched by the filter.' )
Gaffer.Metadata.registerValue( __children["parent"], 'userDefault', '/' )
__children["Prune"]["in"].setInput( __children["BoxIn"]["out"] )
__children["Prune"]["filter"].setInput( __children["BoxIn1"]["out"] )
__children["Prune"]["__uiPosition"].setValue( imath.V2f( -88.6795502, -16.5482121 ) )
Gaffer.Metadata.registerValue( __children["mergedName"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( parent, 'icon', 'mini.png' )

del __children

