import Gaffer
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 4, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["OSLObject"] = GafferOSL.OSLObject( "OSLObject" )
parent.addChild( __children["OSLObject"] )
__children["OSLObject"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "P", Gaffer.V3fPlug( "value", defaultValue = imath.V3f( 0, 0, 0 ), interpretation = IECore.GeometricData.Interpretation.Point ), True, "primitiveVariable", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLObject"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["in"] = GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["in"] )
__children["filter"] = GafferScene.FilterPlug( "filter", defaultValue = 0, minValue = 0, maxValue = 7, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["filter"] )
__children["OSLCode"] = GafferOSL.OSLCode( "OSLCode" )
parent.addChild( __children["OSLCode"] )
__children["OSLCode"]["parameters"].addChild( Gaffer.V3fPlug( "inP", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Point ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.FloatPlug( "Amplitude", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.FloatPlug( "Time", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.V3fPlug( "Direction", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.FloatPlug( "Speed", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.FloatPlug( "Frequency", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.FloatPlug( "CurveU", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.V3fPlug( "Seed", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.SplinefColor3fPlug( "URamp", defaultValue = Gaffer.SplineDefinitionfColor3f( ( ( 0, imath.Color3f( 0, 0, 0 ) ), ( 1, imath.Color3f( 1, 1, 1 ) )), Gaffer.SplineDefinitionInterpolation( 1 )), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"]["URamp"].clearPoints()
__children["OSLCode"]["parameters"]["URamp"].addChild( Gaffer.ValuePlug( "p0", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"]["URamp"]["p0"].addChild( Gaffer.FloatPlug( "x", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"]["URamp"]["p0"].addChild( Gaffer.Color3fPlug( "y", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"]["URamp"].addChild( Gaffer.ValuePlug( "p1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"]["URamp"]["p1"].addChild( Gaffer.FloatPlug( "x", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"]["URamp"]["p1"].addChild( Gaffer.Color3fPlug( "y", defaultValue = imath.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.FloatPlug( "WindMask", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.V3fPlug( "outP", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Point ) )
__children["OSLCode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InPoint"] = GafferOSL.OSLShader( "InPoint" )
parent.addChild( __children["InPoint"] )
__children["InPoint"].loadShader( "ObjectProcessing/InPoint" )
__children["InPoint"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression1"] = Gaffer.Expression( "Expression1" )
parent.addChild( __children["Expression1"] )
__children["Expression1"]["__out"].addChild( Gaffer.FloatPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InFloat"] = GafferOSL.OSLShader( "InFloat" )
parent.addChild( __children["InFloat"] )
__children["InFloat"].loadShader( "ObjectProcessing/InFloat" )
__children["InFloat"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn"] = Gaffer.BoxIn( "BoxIn" )
parent.addChild( __children["BoxIn"] )
__children["BoxIn"].setup( GafferScene.ScenePlug( "out", ) )
__children["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn1"] = Gaffer.BoxIn( "BoxIn1" )
parent.addChild( __children["BoxIn1"] )
__children["BoxIn1"].setup( GafferScene.FilterPlug( "out", defaultValue = 0, minValue = 0, maxValue = 7, ) )
__children["BoxIn1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn2"] = Gaffer.BoxIn( "BoxIn2" )
parent.addChild( __children["BoxIn2"] )
__children["BoxIn2"].setup( Gaffer.FloatPlug( "out", defaultValue = 0.0, ) )
__children["BoxIn2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["parameters_Amplitude"] = Gaffer.FloatPlug( "parameters_Amplitude", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["parameters_Amplitude"] )
__children["BoxIn3"] = Gaffer.BoxIn( "BoxIn3" )
parent.addChild( __children["BoxIn3"] )
__children["BoxIn3"].setup( Gaffer.V3fPlug( "out", defaultValue = imath.V3f( 0, 0, 0 ), interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["BoxIn3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["parameters_Direction"] = Gaffer.V3fPlug( "parameters_Direction", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector )
parent.addChild( __children["parameters_Direction"] )
__children["BoxIn4"] = Gaffer.BoxIn( "BoxIn4" )
parent.addChild( __children["BoxIn4"] )
__children["BoxIn4"].setup( Gaffer.FloatPlug( "out", defaultValue = 0.0, ) )
__children["BoxIn4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["parameters_Frequency"] = Gaffer.FloatPlug( "parameters_Frequency", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["parameters_Frequency"] )
__children["BoxIn5"] = Gaffer.BoxIn( "BoxIn5" )
parent.addChild( __children["BoxIn5"] )
__children["BoxIn5"].setup( Gaffer.V3fPlug( "out", defaultValue = imath.V3f( 0, 0, 0 ), interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["BoxIn5"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["parameters_Seed"] = Gaffer.V3fPlug( "parameters_Seed", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector )
parent.addChild( __children["parameters_Seed"] )
__children["BoxOut"] = Gaffer.BoxOut( "BoxOut" )
parent.addChild( __children["BoxOut"] )
__children["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["out"] = GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["out"] )
__children["enabled"] = Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["enabled"] )
__children["parameters_URamp"] = Gaffer.SplinefColor3fPlug( "parameters_URamp", defaultValue = Gaffer.SplineDefinitionfColor3f( ( ( 0, imath.Color3f( 0, 0, 0 ) ), ( 1, imath.Color3f( 1, 1, 1 ) )), Gaffer.SplineDefinitionInterpolation( 1 )), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["parameters_URamp"] )
__children["BoxIn6"] = Gaffer.BoxIn( "BoxIn6" )
parent.addChild( __children["BoxIn6"] )
__children["BoxIn6"].setup( Gaffer.FloatPlug( "out", defaultValue = 0.0, ) )
__children["BoxIn6"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["parameters_Speed"] = Gaffer.FloatPlug( "parameters_Speed", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["parameters_Speed"] )
__children["OSLObject1"] = GafferOSL.OSLObject( "OSLObject1" )
parent.addChild( __children["OSLObject1"] )
__children["OSLObject1"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "customFloat", Gaffer.FloatPlug( "value", defaultValue = 0.0, ), True, "primitiveVariable", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLObject1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode1"] = GafferOSL.OSLCode( "OSLCode1" )
parent.addChild( __children["OSLCode1"] )
__children["OSLCode1"]["parameters"].addChild( Gaffer.V3fPlug( "inP", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Point ) )
__children["OSLCode1"]["parameters"].addChild( Gaffer.FloatPlug( "WindMaskFrequency", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode1"]["parameters"].addChild( Gaffer.FloatPlug( "WindMaskOffset", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode1"]["parameters"].addChild( Gaffer.FloatPlug( "WindMaskAmplitude", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode1"]["out"].addChild( Gaffer.FloatPlug( "WindMask", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InPoint1"] = GafferOSL.OSLShader( "InPoint1" )
parent.addChild( __children["InPoint1"] )
__children["InPoint1"].loadShader( "ObjectProcessing/InPoint" )
__children["InPoint1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn7"] = Gaffer.BoxIn( "BoxIn7" )
parent.addChild( __children["BoxIn7"] )
__children["BoxIn7"].setup( Gaffer.FloatPlug( "out", defaultValue = 0.0, ) )
__children["BoxIn7"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["parameters_WindMaskFrequency"] = Gaffer.FloatPlug( "parameters_WindMaskFrequency", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["parameters_WindMaskFrequency"] )
__children["BoxIn8"] = Gaffer.BoxIn( "BoxIn8" )
parent.addChild( __children["BoxIn8"] )
__children["BoxIn8"].setup( Gaffer.FloatPlug( "out", defaultValue = 0.0, ) )
__children["BoxIn8"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["parameters_WindMaskOffset"] = Gaffer.FloatPlug( "parameters_WindMaskOffset", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["parameters_WindMaskOffset"] )
__children["InFloat1"] = GafferOSL.OSLShader( "InFloat1" )
parent.addChild( __children["InFloat1"] )
__children["InFloat1"].loadShader( "ObjectProcessing/InFloat" )
__children["InFloat1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn9"] = Gaffer.BoxIn( "BoxIn9" )
parent.addChild( __children["BoxIn9"] )
__children["BoxIn9"].setup( Gaffer.FloatPlug( "out", defaultValue = 0.0, ) )
__children["BoxIn9"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["parameters_WindMaskAmplitude"] = Gaffer.FloatPlug( "parameters_WindMaskAmplitude", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["parameters_WindMaskAmplitude"] )
__children["BoxIn10"] = Gaffer.BoxIn( "BoxIn10" )
parent.addChild( __children["BoxIn10"] )
__children["BoxIn10"].setup( Gaffer.StringPlug( "out", defaultValue = 'P', ) )
__children["BoxIn10"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["maskPName"] = Gaffer.StringPlug( "maskPName", defaultValue = 'Pref', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["maskPName"] )
__children["BoxIn11"] = Gaffer.BoxIn( "BoxIn11" )
parent.addChild( __children["BoxIn11"] )
__children["BoxIn11"].setup( Gaffer.StringPlug( "out", defaultValue = 'P', ) )
__children["BoxIn11"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["deformPName"] = Gaffer.StringPlug( "deformPName", defaultValue = 'P', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["deformPName"] )
__children["OSLObject"]["in"].setInput( __children["OSLObject1"]["out"] )
__children["OSLObject"]["filter"].setInput( __children["BoxIn1"]["out"] )
__children["OSLObject"]["primitiveVariables"]["primitiveVariable"]["value"].setInput( __children["OSLCode"]["out"]["outP"] )
__children["OSLObject"]["__uiPosition"].setValue( imath.V2f( -43.5124779, 2.56297302 ) )
Gaffer.Metadata.registerValue( __children["in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["in"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["in"], 'noduleLayout:spacing', 2.0 )
Gaffer.Metadata.registerValue( __children["filter"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["filter"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["filter"], 'description', 'The filter used to control which parts of the scene are\nprocessed. A Filter node should be connected here.' )
Gaffer.Metadata.registerValue( __children["filter"], 'noduleLayout:section', 'right' )
Gaffer.Metadata.registerValue( __children["filter"], 'plugValueWidget:type', 'GafferSceneUI.FilterPlugValueWidget' )
__children["OSLCode"]["parameters"]["inP"].setInput( __children["InPoint"]["out"]["value"] )
__children["OSLCode"]["parameters"]["Amplitude"].setInput( __children["BoxIn2"]["out"] )
__children["OSLCode"]["parameters"]["Time"].setInput( __children["Expression1"]["__out"]["p0"] )
__children["OSLCode"]["parameters"]["Direction"].setInput( __children["BoxIn3"]["out"] )
__children["OSLCode"]["parameters"]["Speed"].setInput( __children["BoxIn6"]["out"] )
__children["OSLCode"]["parameters"]["Frequency"].setInput( __children["BoxIn4"]["out"] )
__children["OSLCode"]["parameters"]["CurveU"].setInput( __children["InFloat"]["out"]["value"] )
__children["OSLCode"]["parameters"]["Seed"].setInput( __children["BoxIn5"]["out"] )
__children["OSLCode"]["parameters"]["URamp"].setInput( __children["parameters_URamp"] )
__children["OSLCode"]["parameters"]["WindMask"].setInput( __children["InFloat1"]["out"]["value"] )
__children["OSLCode"]["code"].setValue( 'float dispX = noise(Seed[0] + Frequency * (inP - Time * Direction * Speed));\nfloat dispY = noise(Seed[1]+ Frequency * (inP - Time * Direction * Speed));\nfloat dispZ = noise(Seed[2] + Frequency * (inP - Time * Direction * Speed));\n\ncolor ColorU = colorSpline( URampPositions, URampValues, URampBasis, CurveU );\n\noutP = inP + Amplitude * WindMask * ColorU[0] * vector(dispX, dispY, dispZ);\n\n' )
__children["OSLCode"]["__uiPosition"].setValue( imath.V2f( -83.5250397, -25.1040459 ) )
__children["InPoint"]["parameters"]["name"].setInput( __children["BoxIn11"]["out"] )
__children["InPoint"]["__uiPosition"].setValue( imath.V2f( -79.8894119, 12.3632689 ) )
__children["Expression1"]["__uiPosition"].setValue( imath.V2f( -109.341835, -21.1903858 ) )
__children["InFloat"]["parameters"]["name"].setValue( 'curveu' )
__children["InFloat"]["__uiPosition"].setValue( imath.V2f( -102.538811, -25.5647373 ) )
__children["BoxIn"]["__in"].setInput( __children["in"] )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:spacing', 2.0 )
__children["BoxIn"]["__uiPosition"].setValue( imath.V2f( -43.51054, 41.2753067 ) )
__children["BoxIn1"]["name"].setValue( 'filter' )
__children["BoxIn1"]["__in"].setInput( __children["filter"] )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'description', 'The filter used to control which parts of the scene are\nprocessed. A Filter node should be connected here.' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'noduleLayout:section', 'right' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'plugValueWidget:type', 'GafferSceneUI.FilterPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["out"], 'noduleLayout:section', 'left' )
__children["BoxIn1"]["__uiPosition"].setValue( imath.V2f( -14.3153057, 25.1969032 ) )
__children["BoxIn2"]["name"].setValue( 'parameters_Amplitude' )
__children["BoxIn2"]["__in"].setInput( __children["parameters_Amplitude"] )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'label', 'Amplitude' )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn2"]["__uiPosition"].setValue( imath.V2f( -112.448265, 5.45910645 ) )
Gaffer.Metadata.registerValue( __children["parameters_Amplitude"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["parameters_Amplitude"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["parameters_Amplitude"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["parameters_Amplitude"], 'description', '' )
Gaffer.Metadata.registerValue( __children["parameters_Amplitude"], 'label', 'Amplitude' )
Gaffer.Metadata.registerValue( __children["parameters_Amplitude"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["parameters_Amplitude"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["parameters_Amplitude"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["parameters_Amplitude"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["parameters_Amplitude"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["parameters_Amplitude"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["parameters_Amplitude"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["parameters_Amplitude"], 'deletable', True )
__children["BoxIn3"]["name"].setValue( 'parameters_Direction' )
__children["BoxIn3"]["__in"].setInput( __children["parameters_Direction"] )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'nodule:color', imath.Color3f( 0.469999999, 0.180999994, 0.180999994 ) )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'label', 'Direction' )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"]["x"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"]["x"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"]["x"], 'noduleLayout:label', 'Direction.x' )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"]["y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"]["y"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"]["y"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"]["y"], 'noduleLayout:label', 'Direction.y' )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"]["z"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"]["z"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"]["z"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"]["z"], 'noduleLayout:label', 'Direction.z' )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn3"]["__uiPosition"].setValue( imath.V2f( -120.111092, -1.94089317 ) )
Gaffer.Metadata.registerValue( __children["parameters_Direction"], 'nodule:color', imath.Color3f( 0.469999999, 0.180999994, 0.180999994 ) )
Gaffer.Metadata.registerValue( __children["parameters_Direction"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["parameters_Direction"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["parameters_Direction"], 'description', '' )
Gaffer.Metadata.registerValue( __children["parameters_Direction"], 'label', 'Direction' )
Gaffer.Metadata.registerValue( __children["parameters_Direction"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["parameters_Direction"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["parameters_Direction"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["parameters_Direction"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["parameters_Direction"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["parameters_Direction"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["parameters_Direction"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["parameters_Direction"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["parameters_Direction"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["parameters_Direction"]["x"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["parameters_Direction"]["x"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["parameters_Direction"]["x"], 'noduleLayout:label', 'Direction.x' )
Gaffer.Metadata.registerValue( __children["parameters_Direction"]["y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["parameters_Direction"]["y"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["parameters_Direction"]["y"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["parameters_Direction"]["y"], 'noduleLayout:label', 'Direction.y' )
Gaffer.Metadata.registerValue( __children["parameters_Direction"]["z"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["parameters_Direction"]["z"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["parameters_Direction"]["z"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["parameters_Direction"]["z"], 'noduleLayout:label', 'Direction.z' )
__children["BoxIn4"]["name"].setValue( 'parameters_Frequency' )
__children["BoxIn4"]["__in"].setInput( __children["parameters_Frequency"] )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'label', 'Frequency' )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn4"]["__uiPosition"].setValue( imath.V2f( -124.313576, -13.4403858 ) )
Gaffer.Metadata.registerValue( __children["parameters_Frequency"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["parameters_Frequency"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["parameters_Frequency"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["parameters_Frequency"], 'description', '' )
Gaffer.Metadata.registerValue( __children["parameters_Frequency"], 'label', 'Frequency' )
Gaffer.Metadata.registerValue( __children["parameters_Frequency"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["parameters_Frequency"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["parameters_Frequency"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["parameters_Frequency"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["parameters_Frequency"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["parameters_Frequency"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["parameters_Frequency"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["parameters_Frequency"], 'deletable', True )
__children["BoxIn5"]["name"].setValue( 'parameters_Seed' )
__children["BoxIn5"]["__in"].setInput( __children["parameters_Seed"] )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'nodule:color', imath.Color3f( 0.469999999, 0.180999994, 0.180999994 ) )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'label', 'Seed' )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"]["x"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"]["x"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"]["x"], 'noduleLayout:label', 'Seed.x' )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"]["y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"]["y"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"]["y"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"]["y"], 'noduleLayout:label', 'Seed.y' )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"]["z"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"]["z"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"]["z"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"]["z"], 'noduleLayout:label', 'Seed.z' )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn5"]["__uiPosition"].setValue( imath.V2f( -122.450371, -31.2040443 ) )
Gaffer.Metadata.registerValue( __children["parameters_Seed"], 'nodule:color', imath.Color3f( 0.469999999, 0.180999994, 0.180999994 ) )
Gaffer.Metadata.registerValue( __children["parameters_Seed"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["parameters_Seed"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["parameters_Seed"], 'description', '' )
Gaffer.Metadata.registerValue( __children["parameters_Seed"], 'label', 'Seed' )
Gaffer.Metadata.registerValue( __children["parameters_Seed"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["parameters_Seed"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["parameters_Seed"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["parameters_Seed"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["parameters_Seed"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["parameters_Seed"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["parameters_Seed"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["parameters_Seed"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["parameters_Seed"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["parameters_Seed"]["x"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["parameters_Seed"]["x"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["parameters_Seed"]["x"], 'noduleLayout:label', 'Seed.x' )
Gaffer.Metadata.registerValue( __children["parameters_Seed"]["y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["parameters_Seed"]["y"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["parameters_Seed"]["y"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["parameters_Seed"]["y"], 'noduleLayout:label', 'Seed.y' )
Gaffer.Metadata.registerValue( __children["parameters_Seed"]["z"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["parameters_Seed"]["z"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["parameters_Seed"]["z"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["parameters_Seed"]["z"], 'noduleLayout:label', 'Seed.z' )
__children["BoxOut"]["in"].setInput( __children["OSLObject"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["BoxOut"]["__uiPosition"].setValue( imath.V2f( -42.0124779, -18.9514618 ) )
__children["out"].setInput( __children["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["enabled"], 'description', 'The on/off state of the node. When it is off, the node outputs the input scene unchanged.' )
Gaffer.Metadata.registerValue( __children["enabled"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["parameters_URamp"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["parameters_URamp"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["parameters_URamp"], 'description', '' )
Gaffer.Metadata.registerValue( __children["parameters_URamp"], 'label', 'URamp' )
Gaffer.Metadata.registerValue( __children["parameters_URamp"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["parameters_URamp"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["parameters_URamp"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["parameters_URamp"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["parameters_URamp"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["parameters_URamp"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["parameters_URamp"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["parameters_URamp"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["parameters_URamp"]["interpolation"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["parameters_URamp"]["interpolation"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["parameters_URamp"]["interpolation"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["parameters_URamp"]["interpolation"], 'preset:BSpline', 2 )
Gaffer.Metadata.registerValue( __children["parameters_URamp"]["interpolation"], 'preset:CatmullRom', 1 )
Gaffer.Metadata.registerValue( __children["parameters_URamp"]["interpolation"], 'preset:Constant', 4 )
Gaffer.Metadata.registerValue( __children["parameters_URamp"]["interpolation"], 'preset:Linear', 0 )
Gaffer.Metadata.registerValue( __children["parameters_URamp"]["interpolation"], 'preset:MonotoneCubic', 3 )
__children["BoxIn6"]["name"].setValue( 'parameters_Speed' )
__children["BoxIn6"]["__in"].setInput( __children["parameters_Speed"] )
Gaffer.Metadata.registerValue( __children["BoxIn6"]["__in"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxIn6"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn6"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn6"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn6"]["__in"], 'label', 'Speed' )
Gaffer.Metadata.registerValue( __children["BoxIn6"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn6"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn6"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn6"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn6"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn6"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn6"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn6"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn6"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn6"]["__uiPosition"].setValue( imath.V2f( -126.761452, -22.7611771 ) )
Gaffer.Metadata.registerValue( __children["parameters_Speed"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["parameters_Speed"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["parameters_Speed"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["parameters_Speed"], 'description', '' )
Gaffer.Metadata.registerValue( __children["parameters_Speed"], 'label', 'Speed' )
Gaffer.Metadata.registerValue( __children["parameters_Speed"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["parameters_Speed"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["parameters_Speed"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["parameters_Speed"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["parameters_Speed"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["parameters_Speed"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["parameters_Speed"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["parameters_Speed"], 'deletable', True )
__children["OSLObject1"]["in"].setInput( __children["BoxIn"]["out"] )
__children["OSLObject1"]["filter"].setInput( __children["BoxIn1"]["out"] )
__children["OSLObject1"]["interpolation"].setValue( 2 )
__children["OSLObject1"]["primitiveVariables"]["primitiveVariable"]["name"].setValue( 'WindMask' )
__children["OSLObject1"]["primitiveVariables"]["primitiveVariable"]["value"].setInput( __children["OSLCode1"]["out"]["WindMask"] )
__children["OSLObject1"]["__uiPosition"].setValue( imath.V2f( -43.51054, 25.1969032 ) )
__children["OSLCode1"]["parameters"]["inP"].setInput( __children["InPoint1"]["out"]["value"] )
__children["OSLCode1"]["parameters"]["WindMaskFrequency"].setInput( __children["BoxIn7"]["out"] )
__children["OSLCode1"]["parameters"]["WindMaskOffset"].setInput( __children["BoxIn8"]["out"] )
__children["OSLCode1"]["parameters"]["WindMaskAmplitude"].setInput( __children["BoxIn9"]["out"] )
__children["OSLCode1"]["code"].setValue( 'if (WindMaskFrequency == 0)\n{\n\tWindMask = 1.0;\n}\nelse\n{\n\tWindMask = WindMaskAmplitude * max(noise(inP * WindMaskFrequency) - WindMaskOffset, 0);\n}\n' )
__children["OSLCode1"]["__uiPosition"].setValue( imath.V2f( -79.9414368, 39.6969681 ) )
__children["InPoint1"]["parameters"]["name"].setInput( __children["BoxIn10"]["out"] )
__children["InPoint1"]["__uiPosition"].setValue( imath.V2f( -98.9687271, 58.4481659 ) )
__children["BoxIn7"]["name"].setValue( 'parameters_WindMaskFrequency' )
__children["BoxIn7"]["__in"].setInput( __children["parameters_WindMaskFrequency"] )
Gaffer.Metadata.registerValue( __children["BoxIn7"]["__in"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxIn7"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn7"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn7"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn7"]["__in"], 'label', 'WindMaskFrequency' )
Gaffer.Metadata.registerValue( __children["BoxIn7"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn7"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn7"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn7"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn7"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn7"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn7"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn7"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn7"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn7"]["__uiPosition"].setValue( imath.V2f( -122.700523, 52.4171028 ) )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskFrequency"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskFrequency"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskFrequency"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskFrequency"], 'description', '' )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskFrequency"], 'label', 'WindMaskFrequency' )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskFrequency"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskFrequency"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskFrequency"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskFrequency"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskFrequency"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskFrequency"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskFrequency"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskFrequency"], 'deletable', True )
__children["BoxIn8"]["name"].setValue( 'parameters_WindMaskOffset' )
__children["BoxIn8"]["__in"].setInput( __children["parameters_WindMaskOffset"] )
Gaffer.Metadata.registerValue( __children["BoxIn8"]["__in"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxIn8"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn8"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn8"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn8"]["__in"], 'label', 'WindMaskOffset' )
Gaffer.Metadata.registerValue( __children["BoxIn8"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn8"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn8"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn8"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn8"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn8"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn8"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn8"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn8"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn8"]["__uiPosition"].setValue( imath.V2f( -111.199211, 42.4979057 ) )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskOffset"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskOffset"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskOffset"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskOffset"], 'description', '' )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskOffset"], 'label', 'WindMaskOffset' )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskOffset"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskOffset"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskOffset"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskOffset"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskOffset"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskOffset"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskOffset"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskOffset"], 'deletable', True )
__children["InFloat1"]["parameters"]["name"].setValue( 'WindMask' )
__children["InFloat1"]["__uiPosition"].setValue( imath.V2f( -103.300972, -39.1513481 ) )
__children["BoxIn9"]["name"].setValue( 'parameters_WindMaskAmplitude' )
__children["BoxIn9"]["__in"].setInput( __children["parameters_WindMaskAmplitude"] )
Gaffer.Metadata.registerValue( __children["BoxIn9"]["__in"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxIn9"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn9"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn9"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn9"]["__in"], 'label', 'WindMaskAmplitude' )
Gaffer.Metadata.registerValue( __children["BoxIn9"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn9"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn9"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn9"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn9"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn9"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn9"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn9"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn9"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn9"]["__uiPosition"].setValue( imath.V2f( -131.909546, 56.2839851 ) )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskAmplitude"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskAmplitude"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskAmplitude"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskAmplitude"], 'description', '' )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskAmplitude"], 'label', 'WindMaskAmplitude' )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskAmplitude"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskAmplitude"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskAmplitude"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskAmplitude"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskAmplitude"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskAmplitude"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskAmplitude"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["parameters_WindMaskAmplitude"], 'deletable', True )
__children["BoxIn10"]["name"].setValue( 'maskPName' )
__children["BoxIn10"]["__in"].setInput( __children["maskPName"] )
Gaffer.Metadata.registerValue( __children["BoxIn10"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn10"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn10"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn10"]["__in"], 'label', None )
Gaffer.Metadata.registerValue( __children["BoxIn10"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn10"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn10"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn10"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn10"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn10"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn10"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn10"]["__uiPosition"].setValue( imath.V2f( -114.193436, 62.7839813 ) )
Gaffer.Metadata.registerValue( __children["maskPName"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["maskPName"], 'description', '' )
Gaffer.Metadata.registerValue( __children["maskPName"], 'label', None )
Gaffer.Metadata.registerValue( __children["maskPName"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["maskPName"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["maskPName"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["maskPName"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["maskPName"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["maskPName"], 'noduleLayout:label', None )
__children["BoxIn11"]["name"].setValue( 'deformPName' )
__children["BoxIn11"]["__in"].setInput( __children["deformPName"] )
Gaffer.Metadata.registerValue( __children["BoxIn11"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn11"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn11"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn11"]["__in"], 'label', None )
Gaffer.Metadata.registerValue( __children["BoxIn11"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn11"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn11"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn11"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn11"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn11"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn11"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn11"]["__uiPosition"].setValue( imath.V2f( -94.7893066, 12.962945 ) )
Gaffer.Metadata.registerValue( __children["deformPName"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["deformPName"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["deformPName"], 'description', '' )
Gaffer.Metadata.registerValue( __children["deformPName"], 'label', None )
Gaffer.Metadata.registerValue( __children["deformPName"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["deformPName"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["deformPName"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["deformPName"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["deformPName"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["deformPName"], 'noduleLayout:label', None )
__children["Expression1"]["__engine"].setValue( 'python' )
__children["Expression1"]["__expression"].setValue( 'parent["__out"]["p0"] = context.getTime()' )
Gaffer.Metadata.registerValue( parent, 'icon', 'mini.png' )
Gaffer.Metadata.registerValue( parent, 'nodeGadget:color', imath.Color3f( 0.25, 0.349999964, 0.5 ) )


del __children

