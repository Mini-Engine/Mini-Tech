import Gaffer
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 4, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["MakeBindTransform"] = GafferOSL.OSLObject( "MakeBindTransform" )
parent.addChild( __children["MakeBindTransform"] )
__children["MakeBindTransform"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "customMatrix", Gaffer.M44fPlug( "value", defaultValue = imath.M44f( 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ), ), True, "primitiveVariable", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["MakeBindTransform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode2"] = GafferOSL.OSLCode( "OSLCode2" )
parent.addChild( __children["OSLCode2"] )
__children["OSLCode2"]["parameters"].addChild( Gaffer.V3fPlug( "staticP", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Point ) )
__children["OSLCode2"]["parameters"].addChild( Gaffer.V3fPlug( "animP", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Point ) )
__children["OSLCode2"]["parameters"].addChild( Gaffer.V3fPlug( "staticT", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["OSLCode2"]["parameters"].addChild( Gaffer.V3fPlug( "staticB", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["OSLCode2"]["parameters"].addChild( Gaffer.V3fPlug( "animT", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["OSLCode2"]["parameters"].addChild( Gaffer.V3fPlug( "animB", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["OSLCode2"]["out"].addChild( Gaffer.M44fPlug( "Transform", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.M44f( 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InStaticP"] = GafferOSL.OSLShader( "InStaticP" )
parent.addChild( __children["InStaticP"] )
__children["InStaticP"].loadShader( "ObjectProcessing/InPoint" )
__children["InStaticP"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InAnimP"] = GafferOSL.OSLShader( "InAnimP" )
parent.addChild( __children["InAnimP"] )
__children["InAnimP"].loadShader( "ObjectProcessing/InPoint" )
__children["InAnimP"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InStaticT"] = GafferOSL.OSLShader( "InStaticT" )
parent.addChild( __children["InStaticT"] )
__children["InStaticT"].loadShader( "ObjectProcessing/InVector" )
__children["InStaticT"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InStaticB"] = GafferOSL.OSLShader( "InStaticB" )
parent.addChild( __children["InStaticB"] )
__children["InStaticB"].loadShader( "ObjectProcessing/InVector" )
__children["InStaticB"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InAnimT"] = GafferOSL.OSLShader( "InAnimT" )
parent.addChild( __children["InAnimT"] )
__children["InAnimT"].loadShader( "ObjectProcessing/InVector" )
__children["InAnimT"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InAnimB"] = GafferOSL.OSLShader( "InAnimB" )
parent.addChild( __children["InAnimB"] )
__children["InAnimB"].loadShader( "ObjectProcessing/InVector" )
__children["InAnimB"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn"] = Gaffer.BoxIn( "BoxIn" )
parent.addChild( __children["BoxIn"] )
__children["BoxIn"].setup( GafferScene.ScenePlug( "out", ) )
__children["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["in"] = GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["in"] )
__children["BoxOut"] = Gaffer.BoxOut( "BoxOut" )
parent.addChild( __children["BoxOut"] )
__children["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["out"] = GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["out"] )
__children["BoxIn1"] = Gaffer.BoxIn( "BoxIn1" )
parent.addChild( __children["BoxIn1"] )
__children["BoxIn1"].setup( GafferScene.FilterPlug( "out", defaultValue = 0, minValue = 0, maxValue = 7, ) )
__children["BoxIn1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["filter"] = GafferScene.FilterPlug( "filter", defaultValue = 0, minValue = 0, maxValue = 7, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["filter"] )
__children["MeshTangents"] = GafferScene.MeshTangents( "MeshTangents" )
parent.addChild( __children["MeshTangents"] )
__children["MeshTangents"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MeshTangents1"] = GafferScene.MeshTangents( "MeshTangents1" )
parent.addChild( __children["MeshTangents1"] )
__children["MeshTangents1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ResamplePrimitiveVariables"] = GafferScene.ResamplePrimitiveVariables( "ResamplePrimitiveVariables" )
parent.addChild( __children["ResamplePrimitiveVariables"] )
__children["ResamplePrimitiveVariables"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MakeBindTransform"]["in"].setInput( __children["ResamplePrimitiveVariables"]["out"] )
__children["MakeBindTransform"]["filter"].setInput( __children["BoxIn1"]["out"] )
__children["MakeBindTransform"]["adjustBounds"].setValue( False )
__children["MakeBindTransform"]["primitiveVariables"]["primitiveVariable"]["name"].setValue( 'BindTransform' )
__children["MakeBindTransform"]["primitiveVariables"]["primitiveVariable"]["value"].setInput( __children["OSLCode2"]["out"]["Transform"] )
__children["MakeBindTransform"]["__uiPosition"].setValue( imath.V2f( 12.1212692, 12.97579 ) )
__children["OSLCode2"]["parameters"]["staticP"].setInput( __children["InStaticP"]["out"]["value"] )
__children["OSLCode2"]["parameters"]["animP"].setInput( __children["InAnimP"]["out"]["value"] )
__children["OSLCode2"]["parameters"]["staticT"].setInput( __children["InStaticT"]["out"]["value"] )
__children["OSLCode2"]["parameters"]["staticB"].setInput( __children["InStaticB"]["out"]["value"] )
__children["OSLCode2"]["parameters"]["animT"].setInput( __children["InAnimT"]["out"]["value"] )
__children["OSLCode2"]["parameters"]["animB"].setInput( __children["InAnimB"]["out"]["value"] )
__children["OSLCode2"]["code"].setValue( 'matrix StaticMatrix  = matrix(1);\nmatrix AnimMatrix = matrix(1);\n\nvector staticN = cross(staticT, staticB);\nvector animN = cross(animT, animB);\n\nStaticMatrix[0][0] = staticT[0];\nStaticMatrix[0][1] = staticT[1];\nStaticMatrix[0][2] = staticT[2];\n\nStaticMatrix[1][0] = staticB[0];\nStaticMatrix[1][1] = staticB[1];\nStaticMatrix[1][2] = staticB[2];\n\nStaticMatrix[2][0] = staticN[0];\nStaticMatrix[2][1] = staticN[1];\nStaticMatrix[2][2] = staticN[2];\n\nStaticMatrix[3][0] = staticP[0];\nStaticMatrix[3][1] = staticP[1];\nStaticMatrix[3][2] = staticP[2];\n\nAnimMatrix[0][0] = animT[0];\nAnimMatrix[0][1] = animT[1];\nAnimMatrix[0][2] = animT[2];\n\nAnimMatrix[1][0] = animB[0];\nAnimMatrix[1][1] = animB[1];\nAnimMatrix[1][2] = animB[2];\n\nAnimMatrix[2][0] = animN[0];\nAnimMatrix[2][1] = animN[1];\nAnimMatrix[2][2] = animN[2];\n\nAnimMatrix[3][0] = animP[0];\nAnimMatrix[3][1] = animP[1];\nAnimMatrix[3][2] = animP[2];\n\nTransform =  (matrix(1)  / StaticMatrix) * AnimMatrix ;\n' )
__children["OSLCode2"]["__uiPosition"].setValue( imath.V2f( -19.5953255, 12.97579 ) )
__children["InStaticP"]["parameters"]["name"].setValue( 'Pref' )
__children["InStaticP"]["__uiPosition"].setValue( imath.V2f( -47.8601837, 27.1359272 ) )
__children["InAnimP"]["__uiPosition"].setValue( imath.V2f( -47.5548515, 22.3456535 ) )
__children["InStaticT"]["parameters"]["name"].setValue( 'statictangent' )
__children["InStaticT"]["__uiPosition"].setValue( imath.V2f( -48.3712006, 17.8603153 ) )
__children["InStaticB"]["parameters"]["name"].setValue( 'staticbiTangent' )
__children["InStaticB"]["__uiPosition"].setValue( imath.V2f( -47.9641571, 12.97579 ) )
__children["InAnimT"]["parameters"]["name"].setValue( 'animtangent' )
__children["InAnimT"]["__uiPosition"].setValue( imath.V2f( -47.1054993, 8.44848442 ) )
__children["InAnimB"]["parameters"]["name"].setValue( 'animbiTangent' )
__children["InAnimB"]["__uiPosition"].setValue( imath.V2f( -46.6984558, 3.56395531 ) )
__children["BoxIn"]["__in"].setInput( __children["in"] )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:spacing', 2.0 )
__children["BoxIn"]["__uiPosition"].setValue( imath.V2f( 12.1212692, 53.6622925 ) )
Gaffer.Metadata.registerValue( __children["in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["in"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["in"], 'noduleLayout:spacing', 2.0 )
__children["BoxOut"]["in"].setInput( __children["MakeBindTransform"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["BoxOut"]["__uiPosition"].setValue( imath.V2f( 12.1212692, 4.64375925 ) )
__children["out"].setInput( __children["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["BoxIn1"]["name"].setValue( 'filter' )
__children["BoxIn1"]["__in"].setInput( __children["filter"] )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'description', 'The filter used to control which parts of the scene are\nprocessed. A Filter node should be connected here.' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'noduleLayout:section', 'right' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'plugValueWidget:type', 'GafferSceneUI.FilterPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["out"], 'noduleLayout:section', 'left' )
__children["BoxIn1"]["__uiPosition"].setValue( imath.V2f( 44.1776428, 35.8537712 ) )
Gaffer.Metadata.registerValue( __children["filter"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["filter"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["filter"], 'description', 'The filter used to control which parts of the scene are\nprocessed. A Filter node should be connected here.' )
Gaffer.Metadata.registerValue( __children["filter"], 'noduleLayout:section', 'right' )
Gaffer.Metadata.registerValue( __children["filter"], 'plugValueWidget:type', 'GafferSceneUI.FilterPlugValueWidget' )
__children["MeshTangents"]["in"].setInput( __children["BoxIn"]["out"] )
__children["MeshTangents"]["filter"].setInput( __children["BoxIn1"]["out"] )
__children["MeshTangents"]["position"].setValue( 'Pref' )
__children["MeshTangents"]["uTangent"].setInput( __children["MeshTangents"]["tangent"] )
Gaffer.Metadata.registerValue( __children["MeshTangents"]["uTangent"], 'plugValueWidget:type', '' )
__children["MeshTangents"]["vTangent"].setInput( __children["MeshTangents"]["biTangent"] )
Gaffer.Metadata.registerValue( __children["MeshTangents"]["vTangent"], 'plugValueWidget:type', '' )
__children["MeshTangents"]["tangent"].setValue( 'statictangent' )
Gaffer.Metadata.registerValue( __children["MeshTangents"]["tangent"], 'layout:activator', 'alwaysActive' )
__children["MeshTangents"]["biTangent"].setValue( 'staticbiTangent' )
Gaffer.Metadata.registerValue( __children["MeshTangents"]["biTangent"], 'layout:activator', 'alwaysActive' )
__children["MeshTangents"]["__uiPosition"].setValue( imath.V2f( 12.1212692, 35.853775 ) )
__children["MeshTangents1"]["in"].setInput( __children["MeshTangents"]["out"] )
__children["MeshTangents1"]["filter"].setInput( __children["BoxIn1"]["out"] )
__children["MeshTangents1"]["uTangent"].setInput( __children["MeshTangents1"]["tangent"] )
Gaffer.Metadata.registerValue( __children["MeshTangents1"]["uTangent"], 'plugValueWidget:type', '' )
__children["MeshTangents1"]["vTangent"].setInput( __children["MeshTangents1"]["biTangent"] )
Gaffer.Metadata.registerValue( __children["MeshTangents1"]["vTangent"], 'plugValueWidget:type', '' )
__children["MeshTangents1"]["tangent"].setValue( 'animtangent' )
Gaffer.Metadata.registerValue( __children["MeshTangents1"]["tangent"], 'layout:activator', 'alwaysActive' )
__children["MeshTangents1"]["biTangent"].setValue( 'animbiTangent' )
Gaffer.Metadata.registerValue( __children["MeshTangents1"]["biTangent"], 'layout:activator', 'alwaysActive' )
__children["MeshTangents1"]["__uiPosition"].setValue( imath.V2f( 11.9271631, 27.5975437 ) )
__children["ResamplePrimitiveVariables"]["in"].setInput( __children["MeshTangents1"]["out"] )
__children["ResamplePrimitiveVariables"]["filter"].setInput( __children["BoxIn1"]["out"] )
__children["ResamplePrimitiveVariables"]["names"].setValue( 'Pref P tangent biTangent statictangent staticbiTangent' )
__children["ResamplePrimitiveVariables"]["__uiPosition"].setValue( imath.V2f( 11.9271631, 21.1398525 ) )

Gaffer.Metadata.registerValue( parent, 'icon', 'mini.png' )

del __children

