import Gaffer
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 2, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["animGeoIN"] = GafferScene.ScenePlug( "animGeoIN", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["animGeoIN"] )
__children["BindStaticCurvesToStaticMesh"] = GafferScene.ClosestPointSampler( "BindStaticCurvesToStaticMesh" )
parent.addChild( __children["BindStaticCurvesToStaticMesh"] )
__children["BindStaticCurvesToStaticMesh"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["UVSampler"] = GafferScene.UVSampler( "UVSampler" )
parent.addChild( __children["UVSampler"] )
__children["UVSampler"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MakePref"] = GafferScene.ShufflePrimitiveVariables( "MakePref" )
parent.addChild( __children["MakePref"] )
__children["MakePref"]["shuffles"].addChild( Gaffer.ShufflePlug( "shuffle0", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MakePref"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CullCurves"] = GafferScene.DeleteCurves( "CullCurves" )
parent.addChild( __children["CullCurves"] )
__children["CullCurves"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MarkCurvesToCull"] = GafferOSL.OSLObject( "MarkCurvesToCull" )
parent.addChild( __children["MarkCurvesToCull"] )
__children["MarkCurvesToCull"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "customInt", Gaffer.IntPlug( "value", defaultValue = 0, ), True, "primitiveVariable", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["MarkCurvesToCull"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"] = GafferOSL.OSLCode( "OSLCode" )
parent.addChild( __children["OSLCode"] )
__children["OSLCode"]["user"].addChild( Gaffer.IntPlug( "soloCurveId", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.IntPlug( "curveIndex", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.IntPlug( "deleteCurves", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MergeScenes"] = GafferScene.MergeScenes( "MergeScenes" )
parent.addChild( __children["MergeScenes"] )
__children["MergeScenes"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MergeScenes"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MeshFilter"] = GafferScene.PathFilter( "MeshFilter" )
parent.addChild( __children["MeshFilter"] )
__children["MeshFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MeshFilter"].addChild( Gaffer.BoolPlug( "__uiOutputConnectionsMinimised", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MeshFilter"].addChild( Gaffer.BoolPlug( "__uiInputConnectionsMinimised", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CurveSampler"] = GafferScene.CurveSampler( "CurveSampler" )
parent.addChild( __children["CurveSampler"] )
__children["CurveSampler"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PrimvarsToSampleRootLocation"] = GafferOSL.OSLObject( "PrimvarsToSampleRootLocation" )
parent.addChild( __children["PrimvarsToSampleRootLocation"] )
__children["PrimvarsToSampleRootLocation"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "customFloat", Gaffer.FloatPlug( "value", defaultValue = 0.0, ), True, "primitiveVariable", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["PrimvarsToSampleRootLocation"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "customInt", Gaffer.IntPlug( "value", defaultValue = 0, ), True, "primitiveVariable1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["PrimvarsToSampleRootLocation"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["curvesIN"] = GafferScene.ScenePlug( "curvesIN", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["curvesIN"] )
__children["OSLCode1"] = GafferOSL.OSLCode( "OSLCode1" )
parent.addChild( __children["OSLCode1"] )
__children["OSLCode1"]["out"].addChild( Gaffer.IntPlug( "curveIndex", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InInt"] = GafferOSL.OSLShader( "InInt" )
parent.addChild( __children["InInt"] )
__children["InInt"].loadShader( "ObjectProcessing/InInt" )
__children["InInt"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MeshTangents"] = GafferScene.MeshTangents( "MeshTangents" )
parent.addChild( __children["MeshTangents"] )
__children["MeshTangents"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MeshTangents"].addChild( Gaffer.BoolPlug( "__uiInputConnectionsMinimised", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MakeBindTransform"] = GafferOSL.OSLObject( "MakeBindTransform" )
parent.addChild( __children["MakeBindTransform"] )
__children["MakeBindTransform"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "customMatrix", Gaffer.M44fPlug( "value", defaultValue = imath.M44f( 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ), ), True, "primitiveVariable", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["MakeBindTransform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode2"] = GafferOSL.OSLCode( "OSLCode2" )
parent.addChild( __children["OSLCode2"] )
__children["OSLCode2"]["parameters"].addChild( Gaffer.V3fPlug( "staticP", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Point ) )
__children["OSLCode2"]["parameters"].addChild( Gaffer.V3fPlug( "animP", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Point ) )
__children["OSLCode2"]["parameters"].addChild( Gaffer.V3fPlug( "staticT", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["OSLCode2"]["parameters"].addChild( Gaffer.V3fPlug( "staticB", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["OSLCode2"]["parameters"].addChild( Gaffer.V3fPlug( "animT", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["OSLCode2"]["parameters"].addChild( Gaffer.V3fPlug( "animB", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["OSLCode2"]["out"].addChild( Gaffer.M44fPlug( "Transform", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.M44f( 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InStaticP"] = GafferOSL.OSLShader( "InStaticP" )
parent.addChild( __children["InStaticP"] )
__children["InStaticP"].loadShader( "ObjectProcessing/InPoint" )
__children["InStaticP"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InAnimP"] = GafferOSL.OSLShader( "InAnimP" )
parent.addChild( __children["InAnimP"] )
__children["InAnimP"].loadShader( "ObjectProcessing/InPoint" )
__children["InAnimP"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InStaticT"] = GafferOSL.OSLShader( "InStaticT" )
parent.addChild( __children["InStaticT"] )
__children["InStaticT"].loadShader( "ObjectProcessing/InVector" )
__children["InStaticT"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InStaticB"] = GafferOSL.OSLShader( "InStaticB" )
parent.addChild( __children["InStaticB"] )
__children["InStaticB"].loadShader( "ObjectProcessing/InVector" )
__children["InStaticB"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InAnimT"] = GafferOSL.OSLShader( "InAnimT" )
parent.addChild( __children["InAnimT"] )
__children["InAnimT"].loadShader( "ObjectProcessing/InVector" )
__children["InAnimT"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InAnimB"] = GafferOSL.OSLShader( "InAnimB" )
parent.addChild( __children["InAnimB"] )
__children["InAnimB"].loadShader( "ObjectProcessing/InVector" )
__children["InAnimB"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MeshTangents1"] = GafferScene.MeshTangents( "MeshTangents1" )
parent.addChild( __children["MeshTangents1"] )
__children["MeshTangents1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RigidBind"] = GafferOSL.OSLObject( "RigidBind" )
parent.addChild( __children["RigidBind"] )
__children["RigidBind"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "P", Gaffer.V3fPlug( "value", defaultValue = imath.V3f( 0, 0, 0 ), interpretation = IECore.GeometricData.Interpretation.Point ), True, "primitiveVariable", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RigidBind"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode3"] = GafferOSL.OSLCode( "OSLCode3" )
parent.addChild( __children["OSLCode3"] )
__children["OSLCode3"]["parameters"].addChild( Gaffer.M44fPlug( "BindTransform", defaultValue = imath.M44f( 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode3"]["parameters"].addChild( Gaffer.V3fPlug( "inPref", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Point ) )
__children["OSLCode3"]["out"].addChild( Gaffer.V3fPlug( "outP", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Point ) )
__children["OSLCode3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InBindTransform"] = GafferOSL.OSLShader( "InBindTransform" )
parent.addChild( __children["InBindTransform"] )
__children["InBindTransform"].loadShader( "ObjectProcessing/InMatrix" )
__children["InBindTransform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InPoint"] = GafferOSL.OSLShader( "InPoint" )
parent.addChild( __children["InPoint"] )
__children["InPoint"].loadShader( "ObjectProcessing/InPoint" )
__children["InPoint"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"] = Gaffer.Backdrop( "Backdrop" )
parent.addChild( __children["Backdrop"] )
__children["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn"] = Gaffer.BoxIn( "BoxIn" )
parent.addChild( __children["BoxIn"] )
__children["BoxIn"].setup( GafferScene.ScenePlug( "out", ) )
__children["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn1"] = Gaffer.BoxIn( "BoxIn1" )
parent.addChild( __children["BoxIn1"] )
__children["BoxIn1"].setup( GafferScene.ScenePlug( "out", ) )
__children["BoxIn1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxOut"] = Gaffer.BoxOut( "BoxOut" )
parent.addChild( __children["BoxOut"] )
__children["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["out"] = GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["out"] )
__children["enabled"] = Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["enabled"] )
__children["Dot"] = Gaffer.Dot( "Dot" )
parent.addChild( __children["Dot"] )
__children["Dot"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot"].addChild( Gaffer.BoolPlug( "__uiInputConnectionsMinimised", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn2"] = Gaffer.BoxIn( "BoxIn2" )
parent.addChild( __children["BoxIn2"] )
__children["BoxIn2"].setup( GafferScene.FilterPlug( "out", defaultValue = 0, minValue = 0, maxValue = 7, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.AcceptsDependencyCycles, ) )
__children["BoxIn2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["curvesFilterIN"] = GafferScene.FilterPlug( "curvesFilterIN", defaultValue = 0, minValue = 0, maxValue = 7, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic | Gaffer.Plug.Flags.AcceptsDependencyCycles, )
parent.addChild( __children["curvesFilterIN"] )
__children["Dot1"] = Gaffer.Dot( "Dot1" )
parent.addChild( __children["Dot1"] )
__children["Dot1"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["curvesLocation"] = Gaffer.StringPlug( "curvesLocation", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["curvesLocation"] )
__children["bindMeshLocation"] = Gaffer.StringPlug( "bindMeshLocation", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["bindMeshLocation"] )
__children["BoxIn3"] = Gaffer.BoxIn( "BoxIn3" )
parent.addChild( __children["BoxIn3"] )
__children["BoxIn3"].setup( GafferScene.ScenePlug( "out", ) )
__children["BoxIn3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["staticGeoIN"] = GafferScene.ScenePlug( "staticGeoIN", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["staticGeoIN"] )
Gaffer.Metadata.registerValue( __children["animGeoIN"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["animGeoIN"], 'noduleLayout:section', 'top' )
__children["BindStaticCurvesToStaticMesh"]["in"].setInput( __children["MakePref"]["out"] )
__children["BindStaticCurvesToStaticMesh"]["filter"].setInput( __children["BoxIn2"]["out"] )
__children["BindStaticCurvesToStaticMesh"]["source"].setInput( __children["MeshTangents1"]["out"] )
__children["BindStaticCurvesToStaticMesh"]["sourceLocation"].setInput( __children["UVSampler"]["sourceLocation"] )
__children["BindStaticCurvesToStaticMesh"]["primitiveVariables"].setValue( 'uv tangent biTangent P' )
__children["BindStaticCurvesToStaticMesh"]["prefix"].setValue( 'static' )
__children["BindStaticCurvesToStaticMesh"]["status"].setValue( 'result' )
__children["BindStaticCurvesToStaticMesh"]["position"].setValue( 'rootP' )
__children["BindStaticCurvesToStaticMesh"]["__uiPosition"].setValue( imath.V2f( -90.1008759, -7.50113583 ) )
__children["UVSampler"]["in"].setInput( __children["BindStaticCurvesToStaticMesh"]["out"] )
__children["UVSampler"]["filter"].setInput( __children["BoxIn2"]["out"] )
__children["UVSampler"]["source"].setInput( __children["MeshTangents"]["out"] )
__children["UVSampler"]["sourceLocation"].setInput( __children["bindMeshLocation"] )
__children["UVSampler"]["primitiveVariables"].setValue( 'P tangent biTangent' )
__children["UVSampler"]["prefix"].setValue( 'anim' )
__children["UVSampler"]["status"].setValue( 'test' )
__children["UVSampler"]["uv"].setValue( 'staticuv' )
__children["UVSampler"]["__uiPosition"].setValue( imath.V2f( -25.7350521, -52.2752495 ) )
__children["MakePref"]["in"].setInput( __children["CullCurves"]["out"] )
__children["MakePref"]["filter"].setInput( __children["BoxIn2"]["out"] )
__children["MakePref"]["shuffles"]["shuffle0"]["source"].setValue( 'P' )
__children["MakePref"]["shuffles"]["shuffle0"]["destination"].setValue( 'Pref' )
__children["MakePref"]["__uiPosition"].setValue( imath.V2f( -91.6008759, 4.18494987 ) )
__children["CullCurves"]["in"].setInput( __children["MarkCurvesToCull"]["out"] )
__children["CullCurves"]["filter"].setInput( __children["BoxIn2"]["out"] )
__children["CullCurves"]["adjustBounds"].setValue( False )
__children["CullCurves"]["__uiPosition"].setValue( imath.V2f( -91.6008759, 12.3490124 ) )
__children["MarkCurvesToCull"]["in"].setInput( __children["CurveSampler"]["out"] )
__children["MarkCurvesToCull"]["filter"].setInput( __children["BoxIn2"]["out"] )
__children["MarkCurvesToCull"]["interpolation"].setValue( 2 )
__children["MarkCurvesToCull"]["primitiveVariables"]["primitiveVariable"]["name"].setValue( 'deleteCurves' )
__children["MarkCurvesToCull"]["primitiveVariables"]["primitiveVariable"]["value"].setInput( __children["OSLCode"]["out"]["deleteCurves"] )
__children["MarkCurvesToCull"]["__uiPosition"].setValue( imath.V2f( -91.6008759, 23.0673561 ) )
__children["OSLCode"]["user"]["soloCurveId"].setValue( 55 )
Gaffer.Metadata.registerValue( __children["OSLCode"]["user"]["soloCurveId"], 'nodule:type', '' )
__children["OSLCode"]["parameters"]["curveIndex"].setInput( __children["InInt"]["out"]["value"] )
__children["OSLCode"]["code"].setValue( '\n\n//deleteCurves = curveIndex != 18;\ndeleteCurves = curveIndex > 50000;' )
__children["OSLCode"]["__uiPosition"].setValue( imath.V2f( -112.431969, 23.0673561 ) )
__children["MergeScenes"]["in"][0].setInput( __children["RigidBind"]["out"] )
__children["MergeScenes"]["in"][1].setInput( __children["Dot1"]["out"] )
__children["MergeScenes"]["__uiPosition"].setValue( imath.V2f( -22.7350521, -135.879074 ) )
__children["MeshFilter"]["paths"].setInput( __children["bindMeshLocation"] )
__children["MeshFilter"]["__uiPosition"].setValue( imath.V2f( 66.2737427, 93.4589386 ) )
__children["CurveSampler"]["in"].setInput( __children["PrimvarsToSampleRootLocation"]["out"] )
__children["CurveSampler"]["filter"].setInput( __children["BoxIn2"]["out"] )
__children["CurveSampler"]["source"].setInput( __children["PrimvarsToSampleRootLocation"]["out"] )
__children["CurveSampler"]["sourceLocation"].setInput( __children["curvesLocation"] )
__children["CurveSampler"]["primitiveVariables"].setValue( 'P' )
__children["CurveSampler"]["prefix"].setValue( 'root' )
__children["CurveSampler"]["curveIndex"].setValue( 'curveIndex' )
__children["CurveSampler"]["v"].setValue( 'V' )
__children["CurveSampler"]["__uiPosition"].setValue( imath.V2f( -91.6008759, 34.2048035 ) )
__children["PrimvarsToSampleRootLocation"]["in"].setInput( __children["BoxIn1"]["out"] )
__children["PrimvarsToSampleRootLocation"]["filter"].setInput( __children["BoxIn2"]["out"] )
__children["PrimvarsToSampleRootLocation"]["interpolation"].setValue( 2 )
__children["PrimvarsToSampleRootLocation"]["primitiveVariables"]["primitiveVariable"]["name"].setValue( 'V' )
__children["PrimvarsToSampleRootLocation"]["primitiveVariables"]["primitiveVariable1"]["name"].setValue( 'curveIndex' )
__children["PrimvarsToSampleRootLocation"]["primitiveVariables"]["primitiveVariable1"]["value"].setInput( __children["OSLCode1"]["out"]["curveIndex"] )
__children["PrimvarsToSampleRootLocation"]["__uiPosition"].setValue( imath.V2f( -93.1008759, 46.5281525 ) )
Gaffer.Metadata.registerValue( __children["curvesIN"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["curvesIN"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["curvesIN"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["curvesIN"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["curvesIN"], 'noduleLayout:spacing', 2.0 )
__children["OSLCode1"]["code"].setValue( 'getattribute("shading:index", curveIndex);' )
__children["OSLCode1"]["__uiPosition"].setValue( imath.V2f( -115.241478, 46.5281525 ) )
__children["InInt"]["parameters"]["name"].setValue( 'curveIndex' )
__children["InInt"]["__uiPosition"].setValue( imath.V2f( -130.895203, 23.0673561 ) )
__children["MeshTangents"]["in"].setInput( __children["BoxIn"]["out"] )
__children["MeshTangents"]["filter"].setInput( __children["MeshFilter"]["out"] )
__children["MeshTangents"]["uTangent"].setInput( __children["MeshTangents"]["tangent"] )
Gaffer.Metadata.registerValue( __children["MeshTangents"]["uTangent"], 'plugValueWidget:type', '' )
__children["MeshTangents"]["vTangent"].setInput( __children["MeshTangents"]["biTangent"] )
Gaffer.Metadata.registerValue( __children["MeshTangents"]["vTangent"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["MeshTangents"]["tangent"], 'layout:activator', 'alwaysActive' )
Gaffer.Metadata.registerValue( __children["MeshTangents"]["biTangent"], 'layout:activator', 'alwaysActive' )
__children["MeshTangents"]["__uiPosition"].setValue( imath.V2f( 23.9660549, 82.4827118 ) )
__children["MakeBindTransform"]["in"].setInput( __children["UVSampler"]["out"] )
__children["MakeBindTransform"]["filter"].setInput( __children["BoxIn2"]["out"] )
__children["MakeBindTransform"]["adjustBounds"].setValue( False )
__children["MakeBindTransform"]["interpolation"].setValue( 2 )
__children["MakeBindTransform"]["primitiveVariables"]["primitiveVariable"]["name"].setValue( 'BindTransform' )
__children["MakeBindTransform"]["primitiveVariables"]["primitiveVariable"]["value"].setInput( __children["OSLCode2"]["out"]["Transform"] )
__children["MakeBindTransform"]["__uiPosition"].setValue( imath.V2f( -25.7350521, -60.4393082 ) )
__children["OSLCode2"]["parameters"]["staticP"].setInput( __children["InStaticP"]["out"]["value"] )
__children["OSLCode2"]["parameters"]["animP"].setInput( __children["InAnimP"]["out"]["value"] )
__children["OSLCode2"]["parameters"]["staticT"].setInput( __children["InStaticT"]["out"]["value"] )
__children["OSLCode2"]["parameters"]["staticB"].setInput( __children["InStaticB"]["out"]["value"] )
__children["OSLCode2"]["parameters"]["animT"].setInput( __children["InAnimT"]["out"]["value"] )
__children["OSLCode2"]["parameters"]["animB"].setInput( __children["InAnimB"]["out"]["value"] )
__children["OSLCode2"]["code"].setValue( 'matrix StaticMatrix  = matrix(1);\nmatrix AnimMatrix = matrix(1);\n\nvector staticN = cross(staticT, staticB);\nvector animN = cross(animT, animB);\n\nStaticMatrix[0][0] = staticT[0];\nStaticMatrix[0][1] = staticT[1];\nStaticMatrix[0][2] = staticT[2];\n\nStaticMatrix[1][0] = staticB[0];\nStaticMatrix[1][1] = staticB[1];\nStaticMatrix[1][2] = staticB[2];\n\nStaticMatrix[2][0] = staticN[0];\nStaticMatrix[2][1] = staticN[1];\nStaticMatrix[2][2] = staticN[2];\n\nStaticMatrix[3][0] = staticP[0];\nStaticMatrix[3][1] = staticP[1];\nStaticMatrix[3][2] = staticP[2];\n\nAnimMatrix[0][0] = animT[0];\nAnimMatrix[0][1] = animT[1];\nAnimMatrix[0][2] = animT[2];\n\nAnimMatrix[1][0] = animB[0];\nAnimMatrix[1][1] = animB[1];\nAnimMatrix[1][2] = animB[2];\n\nAnimMatrix[2][0] = animN[0];\nAnimMatrix[2][1] = animN[1];\nAnimMatrix[2][2] = animN[2];\n\nAnimMatrix[3][0] = animP[0];\nAnimMatrix[3][1] = animP[1];\nAnimMatrix[3][2] = animP[2];\n\nTransform =  (matrix(1)  / StaticMatrix) * AnimMatrix ;\n' )
__children["OSLCode2"]["__uiPosition"].setValue( imath.V2f( -71.7133102, -60.4393082 ) )
__children["InStaticP"]["parameters"]["name"].setValue( 'staticP' )
__children["InStaticP"]["__uiPosition"].setValue( imath.V2f( -99.9781494, -46.279171 ) )
__children["InAnimP"]["parameters"]["name"].setValue( 'animP' )
__children["InAnimP"]["__uiPosition"].setValue( imath.V2f( -100.13501, -50.8383446 ) )
__children["InStaticT"]["parameters"]["name"].setValue( 'statictangent' )
__children["InStaticT"]["__uiPosition"].setValue( imath.V2f( -100.489166, -55.5547829 ) )
__children["InStaticB"]["parameters"]["name"].setValue( 'staticbiTangent' )
__children["InStaticB"]["__uiPosition"].setValue( imath.V2f( -100.082123, -60.4393082 ) )
__children["InAnimT"]["parameters"]["name"].setValue( 'animtangent' )
__children["InAnimT"]["__uiPosition"].setValue( imath.V2f( -99.2234802, -64.9666138 ) )
__children["InAnimB"]["parameters"]["name"].setValue( 'animbiTangent' )
__children["InAnimB"]["__uiPosition"].setValue( imath.V2f( -98.8164368, -69.8511429 ) )
__children["MeshTangents1"]["in"].setInput( __children["BoxIn3"]["out"] )
__children["MeshTangents1"]["filter"].setInput( __children["MeshFilter"]["out"] )
__children["MeshTangents1"]["uTangent"].setInput( __children["MeshTangents1"]["tangent"] )
Gaffer.Metadata.registerValue( __children["MeshTangents1"]["uTangent"], 'plugValueWidget:type', '' )
__children["MeshTangents1"]["vTangent"].setInput( __children["MeshTangents1"]["biTangent"] )
Gaffer.Metadata.registerValue( __children["MeshTangents1"]["vTangent"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["MeshTangents1"]["tangent"], 'layout:activator', 'alwaysActive' )
Gaffer.Metadata.registerValue( __children["MeshTangents1"]["biTangent"], 'layout:activator', 'alwaysActive' )
__children["MeshTangents1"]["__uiPosition"].setValue( imath.V2f( -11.9023609, 87.8992538 ) )
__children["RigidBind"]["in"].setInput( __children["MakeBindTransform"]["out"] )
__children["RigidBind"]["filter"].setInput( __children["BoxIn2"]["out"] )
__children["RigidBind"]["primitiveVariables"]["primitiveVariable"]["value"].setInput( __children["OSLCode3"]["out"]["outP"] )
__children["RigidBind"]["__uiPosition"].setValue( imath.V2f( -25.7350521, -97.5714264 ) )
__children["OSLCode3"]["parameters"]["BindTransform"].setInput( __children["InBindTransform"]["out"]["value"] )
__children["OSLCode3"]["parameters"]["inPref"].setInput( __children["InPoint"]["out"]["value"] )
__children["OSLCode3"]["code"].setValue( 'outP = transform(BindTransform, point(inPref));\n' )
__children["OSLCode3"]["__uiPosition"].setValue( imath.V2f( -50.1819649, -97.5714264 ) )
__children["InBindTransform"]["parameters"]["name"].setValue( 'BindTransform' )
__children["InBindTransform"]["__uiPosition"].setValue( imath.V2f( -70.6361847, -96.9714279 ) )
__children["InPoint"]["parameters"]["name"].setValue( 'Pref' )
__children["InPoint"]["__uiPosition"].setValue( imath.V2f( -71.0209732, -104.883698 ) )
Gaffer.Metadata.registerValue( __children["Backdrop"], 'nodeGadget:color', imath.Color3f( 0.375, 0.375, 0.151874989 ) )
__children["Backdrop"]["title"].setValue( 'Notes' )
__children["Backdrop"]["description"].setValue( "* MakeBindTransform can be split into static & dynamic parts ( is it worth it??)\n* delete unused primvars\n* Add curve widths\n* Jab it all in a box\n\nBugs\n\n* Matrix44 doesn't render in Primitive inspector\n* needed to convert to point in RigidiBind OSL this should have been correct.\n\n\nFeatures\n\n* couldn't use instancer with Matrix44f  or converting from Matrix44 to orient and  P " )
__children["Backdrop"]["__uiPosition"].setValue( imath.V2f( 148.402115, 45.9452286 ) )
__children["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -44.9728775, -34.1215515 ), imath.V2f( 10, 10 ) ) )
__children["BoxIn"]["name"].setValue( 'animGeoIN' )
__children["BoxIn"]["__in"].setInput( __children["animGeoIN"] )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["out"], 'noduleLayout:section', 'bottom' )
__children["BoxIn"]["__uiPosition"].setValue( imath.V2f( 23.9660549, 104.395355 ) )
__children["BoxIn1"]["name"].setValue( 'curvesIN' )
__children["BoxIn1"]["__in"].setInput( __children["curvesIN"] )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'noduleLayout:spacing', 2.0 )
__children["BoxIn1"]["__uiPosition"].setValue( imath.V2f( -93.1008759, 59.1126022 ) )
__children["BoxOut"]["in"].setInput( __children["MergeScenes"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["BoxOut"]["passThrough"].setInput( __children["Dot"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["passThrough"], 'noduleLayout:section', 'top' )
__children["BoxOut"]["enabled"].setInput( __children["enabled"] )
__children["BoxOut"]["__uiPosition"].setValue( imath.V2f( -21.2350521, -152.799149 ) )
__children["out"].setInput( __children["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["out"], 'noduleLayout:section', 'bottom' )
__children["Dot"]["in"].setInput( __children["BoxIn"]["out"] )
Gaffer.Metadata.registerValue( __children["Dot"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["Dot"]["out"], 'noduleLayout:section', 'bottom' )
__children["Dot"]["__uiPosition"].setValue( imath.V2f( 8.84001827, -145.299149 ) )
__children["Dot"]["__uiInputConnectionsMinimised"].setValue( True )
__children["BoxIn2"]["name"].setValue( 'curvesFilterIN' )
__children["BoxIn2"]["__in"].setInput( __children["curvesFilterIN"] )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'description', 'The result of the filter. This should be connected into\nthe "filter" plug of a FilteredSceneProcessor.' )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["out"], 'noduleLayout:section', 'left' )
__children["BoxIn2"]["__uiPosition"].setValue( imath.V2f( 71.4861908, 46.5281525 ) )
Gaffer.Metadata.registerValue( __children["curvesFilterIN"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["curvesFilterIN"], 'description', 'The result of the filter. This should be connected into\nthe "filter" plug of a FilteredSceneProcessor.' )
Gaffer.Metadata.registerValue( __children["curvesFilterIN"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["curvesFilterIN"], 'noduleLayout:section', 'right' )
__children["Dot1"]["in"].setInput( __children["MeshTangents"]["out"] )
__children["Dot1"]["__uiPosition"].setValue( imath.V2f( 23.966053, -128.547043 ) )
Gaffer.Metadata.registerValue( __children["curvesLocation"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["curvesLocation"], 'description', 'The location of the primitive in the `source` scene that\nwill be sampled from.' )
Gaffer.Metadata.registerValue( __children["curvesLocation"], 'plugValueWidget:type', 'GafferSceneUI.ScenePathPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["curvesLocation"], 'scenePathPlugValueWidget:scene', 'source' )
Gaffer.Metadata.registerValue( __children["bindMeshLocation"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["bindMeshLocation"], 'description', 'The location of the primitive in the `source` scene that\nwill be sampled from.' )
Gaffer.Metadata.registerValue( __children["bindMeshLocation"], 'plugValueWidget:type', 'GafferSceneUI.ScenePathPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["bindMeshLocation"], 'scenePathPlugValueWidget:scene', 'source' )
__children["BoxIn3"]["name"].setValue( 'staticGeoIN' )
__children["BoxIn3"]["__in"].setInput( __children["staticGeoIN"] )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'noduleLayout:spacing', 2.0 )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["out"], 'noduleLayout:section', 'bottom' )
__children["BoxIn3"]["__uiPosition"].setValue( imath.V2f( -11.9023609, 102.937225 ) )
Gaffer.Metadata.registerValue( __children["staticGeoIN"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["staticGeoIN"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["staticGeoIN"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["staticGeoIN"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["staticGeoIN"], 'noduleLayout:spacing', 2.0 )
Gaffer.Metadata.registerValue( __children["staticGeoIN"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( parent, 'icon', 'mini.png' )
Gaffer.Metadata.registerValue( parent, 'description', 'A container for "subgraphs" - node networks which exist inside the\nBox and can be exposed by promoting selected internal plugs onto the\noutside of the Box.\n\nBoxes can be used as an organisational tool for simplifying large\ngraphs by collapsing them into sections which perform distinct tasks.\nThey are also used for authoring files to be used with the Reference\nnode.' )
Gaffer.Metadata.registerValue( parent, 'nodeGadget:color', imath.Color3f( 0.25, 0.349999964, 0.5 ) )


del __children

