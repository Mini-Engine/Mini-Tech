import Gaffer
import GafferImage
import GafferOSL
import GafferScene
import IECore
import MiniGaffer
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 4, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 2, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "mini:examplesRoot", Gaffer.StringPlug( "value", defaultValue = '/home/tengu/dev/git/Mini-Tech/.install/examples', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "miniExamplesRoot", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["ScatterPointsOnSphere"] = GafferScene.Scatter( "ScatterPointsOnSphere" )
parent.addChild( __children["ScatterPointsOnSphere"] )
__children["ScatterPointsOnSphere"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"].addChild( Gaffer.BoolPlug( "__uiOutputConnectionsMinimised", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MiniGrowCurves"] = MiniGaffer.MiniGrowCurves( "MiniGrowCurves" )
parent.addChild( __children["MiniGrowCurves"] )
__children["MiniGrowCurves"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SetNumCVsAndLength"] = GafferOSL.OSLObject( "SetNumCVsAndLength" )
parent.addChild( __children["SetNumCVsAndLength"] )
__children["SetNumCVsAndLength"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "customInt", Gaffer.IntPlug( "value", defaultValue = 0, ), True, "primitiveVariable", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["SetNumCVsAndLength"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "customFloat", Gaffer.FloatPlug( "value", defaultValue = 0.0, ), True, "primitiveVariable1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["SetNumCVsAndLength"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter1"] = GafferScene.PathFilter( "PathFilter1" )
parent.addChild( __children["PathFilter1"] )
__children["PathFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter1"].addChild( Gaffer.BoolPlug( "__uiOutputConnectionsMinimised", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Sphere"] = GafferScene.Sphere( "Sphere" )
parent.addChild( __children["Sphere"] )
__children["Sphere"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CopyNormalsFromMeshToPoints"] = GafferScene.ClosestPointSampler( "CopyNormalsFromMeshToPoints" )
parent.addChild( __children["CopyNormalsFromMeshToPoints"] )
__children["CopyNormalsFromMeshToPoints"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MeshNormals"] = GafferScene.MeshNormals( "MeshNormals" )
parent.addChild( __children["MeshNormals"] )
__children["MeshNormals"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"] = Gaffer.Backdrop( "Backdrop" )
parent.addChild( __children["Backdrop"] )
__children["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"] = Gaffer.Backdrop( "Backdrop1" )
parent.addChild( __children["Backdrop1"] )
__children["Backdrop1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 44789 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["miniExamplesRoot"]["name"], 'readOnly', True )
__children["ScatterPointsOnSphere"]["in"].setInput( __children["MeshNormals"]["out"] )
__children["ScatterPointsOnSphere"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["ScatterPointsOnSphere"]["destination"].setValue( '' )
__children["ScatterPointsOnSphere"]["name"].setValue( 'curves' )
__children["ScatterPointsOnSphere"]["density"].setValue( 465.45831298828125 )
__children["ScatterPointsOnSphere"]["__uiPosition"].setValue( imath.V2f( -47.1530609, 19.8727551 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/sphere' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( -1.56784904, 27.979866 ) )
__children["PathFilter"]["__uiOutputConnectionsMinimised"].setValue( True )
__children["MiniGrowCurves"]["in"].setInput( __children["CopyNormalsFromMeshToPoints"]["out"] )
__children["MiniGrowCurves"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["MiniGrowCurves"]["__uiPosition"].setValue( imath.V2f( -45.6530609, -7.00653934 ) )
__children["SetNumCVsAndLength"]["in"].setInput( __children["ScatterPointsOnSphere"]["out"] )
__children["SetNumCVsAndLength"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["SetNumCVsAndLength"]["primitiveVariables"]["primitiveVariable"]["name"].setValue( 'NumCVs' )
__children["SetNumCVsAndLength"]["primitiveVariables"]["primitiveVariable"]["value"].setValue( 10 )
__children["SetNumCVsAndLength"]["primitiveVariables"]["primitiveVariable1"]["name"].setValue( 'CurveLength' )
__children["SetNumCVsAndLength"]["primitiveVariables"]["primitiveVariable1"]["value"].setValue( 0.14000000059604645 )
__children["SetNumCVsAndLength"]["__uiPosition"].setValue( imath.V2f( -47.1530609, 11.3907232 ) )
__children["PathFilter1"]["paths"].setValue( IECore.StringVectorData( [ '/curves' ] ) )
__children["PathFilter1"]["__uiPosition"].setValue( imath.V2f( -1.26538372, 15.1841068 ) )
__children["PathFilter1"]["__uiOutputConnectionsMinimised"].setValue( True )
__children["Sphere"]["__uiPosition"].setValue( imath.V2f( -47.1530609, 43.0566559 ) )
__children["CopyNormalsFromMeshToPoints"]["in"].setInput( __children["SetNumCVsAndLength"]["out"] )
__children["CopyNormalsFromMeshToPoints"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["CopyNormalsFromMeshToPoints"]["source"].setInput( __children["SetNumCVsAndLength"]["out"] )
__children["CopyNormalsFromMeshToPoints"]["sourceLocation"].setValue( '/sphere' )
__children["CopyNormalsFromMeshToPoints"]["primitiveVariables"].setValue( 'N' )
__children["CopyNormalsFromMeshToPoints"]["__uiPosition"].setValue( imath.V2f( -45.6530609, 2.90869188 ) )
__children["MeshNormals"]["in"].setInput( __children["Sphere"]["out"] )
__children["MeshNormals"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["MeshNormals"]["__uiPosition"].setValue( imath.V2f( -47.1530609, 37.3925896 ) )
__children["Backdrop"]["title"].setValue( 'Create Points' )
__children["Backdrop"]["__uiPosition"].setValue( imath.V2f( -45.6530609, 11.3907232 ) )
__children["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -15.6685104, -13.6170139 ), imath.V2f( 13.457859, 19.564064 ) ) )
__children["Backdrop1"]["title"].setValue( 'Create Mesh' )
__children["Backdrop1"]["__uiPosition"].setValue( imath.V2f( -47.1530609, 40.2246208 ) )
__children["Backdrop1"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -13.6969261, -5.83805084 ), imath.V2f( 14.5, 11.2466278 ) ) )


del __children

