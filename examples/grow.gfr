import Gaffer
import GafferImage
import GafferOSL
import GafferScene
import IECore
import MiniGaffer
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 4, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 2, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Scatter"] = GafferScene.Scatter( "Scatter" )
parent.addChild( __children["Scatter"] )
__children["Scatter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MiniGrowCurves"] = MiniGaffer.MiniGrowCurves( "MiniGrowCurves" )
parent.addChild( __children["MiniGrowCurves"] )
__children["MiniGrowCurves"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLObject"] = GafferOSL.OSLObject( "OSLObject" )
parent.addChild( __children["OSLObject"] )
__children["OSLObject"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "customInt", Gaffer.IntPlug( "value", defaultValue = 0, ), True, "primitiveVariable", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLObject"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "customFloat", Gaffer.FloatPlug( "value", defaultValue = 0.0, ), True, "primitiveVariable1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLObject"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter1"] = GafferScene.PathFilter( "PathFilter1" )
parent.addChild( __children["PathFilter1"] )
__children["PathFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Sphere"] = GafferScene.Sphere( "Sphere" )
parent.addChild( __children["Sphere"] )
__children["Sphere"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ClosestPointSampler"] = GafferScene.ClosestPointSampler( "ClosestPointSampler" )
parent.addChild( __children["ClosestPointSampler"] )
__children["ClosestPointSampler"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MeshNormals"] = GafferScene.MeshNormals( "MeshNormals" )
parent.addChild( __children["MeshNormals"] )
__children["MeshNormals"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 46643 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["miniExamplesRoot"]["name"], 'readOnly', True )
__children["Scatter"]["in"].setInput( __children["MeshNormals"]["out"] )
__children["Scatter"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["Scatter"]["name"].setValue( 'points' )
__children["Scatter"]["density"].setValue( 1000.0 )
__children["Scatter"]["__uiPosition"].setValue( imath.V2f( -42.3999977, 15.3062363 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/sphere' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( -4.00861073, 24.6398754 ) )
__children["MiniGrowCurves"]["in"].setInput( __children["ClosestPointSampler"]["out"] )
__children["MiniGrowCurves"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["MiniGrowCurves"]["__uiPosition"].setValue( imath.V2f( -33.2927513, -19.923027 ) )
__children["OSLObject"]["in"].setInput( __children["Scatter"]["out"] )
__children["OSLObject"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["OSLObject"]["primitiveVariables"]["primitiveVariable"]["name"].setValue( 'NumCVs' )
__children["OSLObject"]["primitiveVariables"]["primitiveVariable"]["value"].setValue( 10 )
__children["OSLObject"]["primitiveVariables"]["primitiveVariable1"]["name"].setValue( 'CurveLength' )
__children["OSLObject"]["primitiveVariables"]["primitiveVariable1"]["value"].setValue( 0.07999999821186066 )
__children["OSLObject"]["__uiPosition"].setValue( imath.V2f( -42.3999977, 6.82420444 ) )
__children["PathFilter1"]["paths"].setValue( IECore.StringVectorData( [ '/sphere/points' ] ) )
__children["PathFilter1"]["__uiPosition"].setValue( imath.V2f( -14.8822594, -2.02968121 ) )
__children["Sphere"]["__uiPosition"].setValue( imath.V2f( -25.9490204, 35.4062691 ) )
__children["ClosestPointSampler"]["in"].setInput( __children["OSLObject"]["out"] )
__children["ClosestPointSampler"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["ClosestPointSampler"]["source"].setInput( __children["MeshNormals"]["out"] )
__children["ClosestPointSampler"]["sourceLocation"].setValue( '/sphere' )
__children["ClosestPointSampler"]["primitiveVariables"].setValue( 'N' )
__children["ClosestPointSampler"]["__uiPosition"].setValue( imath.V2f( -40.8999977, -7.2220397 ) )
__children["MeshNormals"]["in"].setInput( __children["Sphere"]["out"] )
__children["MeshNormals"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["MeshNormals"]["__uiPosition"].setValue( imath.V2f( -25.9490204, 27.2422066 ) )


del __children

