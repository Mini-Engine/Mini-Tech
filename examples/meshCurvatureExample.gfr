import Gaffer
import GafferImage
import GafferOSL
import GafferScene
import IECore
import MiniGaffer
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Cow"] = GafferScene.SceneReader( "Cow" )
parent.addChild( __children["Cow"] )
__children["Cow"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MeshCurvature"] = MiniGaffer.MiniMeshCurvature( "MeshCurvature" )
parent.addChild( __children["MeshCurvature"] )
__children["MeshCurvature"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MeshNormals"] = GafferScene.MeshNormals( "MeshNormals" )
parent.addChild( __children["MeshNormals"] )
__children["MeshNormals"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLObject"] = GafferOSL.OSLObject( "OSLObject" )
parent.addChild( __children["OSLObject"] )
__children["OSLObject"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "Cs", Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "primitiveVariable", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLObject"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InFloat"] = GafferOSL.OSLShader( "InFloat" )
parent.addChild( __children["InFloat"] )
__children["InFloat"].loadShader( "ObjectProcessing/InFloat" )
__children["InFloat"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BlurPrimitiveVariables"] = MiniGaffer.MiniBlurPrimitiveVariables( "BlurPrimitiveVariables" )
parent.addChild( __children["BlurPrimitiveVariables"] )
__children["BlurPrimitiveVariables"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"] = GafferOSL.OSLCode( "OSLCode" )
parent.addChild( __children["OSLCode"] )
__children["OSLCode"]["parameters"].addChild( Gaffer.FloatPlug( "input1", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.FloatPlug( "concavities", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.FloatPlug( "convexities", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 37085 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["Cow"]["fileName"].setValue( '${GAFFER_ROOT}/resources/cow/cow.scc' )
__children["Cow"]["__uiPosition"].setValue( imath.V2f( -2.94910216, 10.9140644 ) )
__children["MeshCurvature"]["in"].setInput( __children["MeshNormals"]["out"] )
__children["MeshCurvature"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["MeshCurvature"]["normalize"].setValue( True )
__children["MeshCurvature"]["__uiPosition"].setValue( imath.V2f( -2.94910216, -5.41406202 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/cow' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( 14.6426983, 6.91469288 ) )
__children["MeshNormals"]["in"].setInput( __children["Cow"]["out"] )
__children["MeshNormals"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["MeshNormals"]["__uiPosition"].setValue( imath.V2f( -2.94910216, 2.75000048 ) )
__children["OSLObject"]["in"].setInput( __children["BlurPrimitiveVariables"]["out"] )
__children["OSLObject"]["filter"].setInput( __children["PathFilter"]["out"] )
Gaffer.Metadata.registerValue( __children["OSLObject"]["primitiveVariables"]["primitiveVariable"]["value"], 'compoundNumericNodule:childrenVisible', True )
__children["OSLObject"]["primitiveVariables"]["primitiveVariable"]["value"]["r"].setInput( __children["OSLCode"]["out"]["concavities"] )
__children["OSLObject"]["primitiveVariables"]["primitiveVariable"]["value"]["g"].setInput( __children["OSLCode"]["out"]["convexities"] )
__children["OSLObject"]["__uiPosition"].setValue( imath.V2f( -2.94945049, -22.1851559 ) )
__children["InFloat"]["parameters"]["name"].setValue( 'curvature' )
__children["InFloat"]["__uiPosition"].setValue( imath.V2f( -27.7912483, -21.4351559 ) )
__children["BlurPrimitiveVariables"]["in"].setInput( __children["MeshCurvature"]["out"] )
__children["BlurPrimitiveVariables"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["BlurPrimitiveVariables"]["adjustBounds"].setValue( False )
__children["BlurPrimitiveVariables"]["primitiveVariables"].setValue( 'curvature' )
__children["BlurPrimitiveVariables"]["iterations"].setValue( 2 )
__children["BlurPrimitiveVariables"]["iterationScale"].setValue( 0.5 )
__children["BlurPrimitiveVariables"]["__uiPosition"].setValue( imath.V2f( -2.94945049, -13.578125 ) )
__children["OSLCode"]["parameters"]["input1"].setInput( __children["InFloat"]["out"]["value"] )
__children["OSLCode"]["code"].setValue( 'concavities = input1 < 0.0 ? input1 * -1 : 0;\nconvexities = input1 > 0.0 ? input1 : 0;' )
__children["OSLCode"]["__uiPosition"].setValue( imath.V2f( -16.4116096, -21.4351559 ) )


del __children

