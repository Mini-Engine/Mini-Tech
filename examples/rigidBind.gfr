import Gaffer
import GafferImage
import GafferOSL
import GafferScene
import IECore
import MiniGaffer
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 4, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 2, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "mini:examplesRoot", Gaffer.StringPlug( "value", defaultValue = '/home/tengu/dev/git/Mini-Tech/.install/examples', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "miniExamplesRoot", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Scatter"] = GafferScene.Scatter( "Scatter" )
parent.addChild( __children["Scatter"] )
__children["Scatter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SkinGeometryPathFilter"] = GafferScene.PathFilter( "SkinGeometryPathFilter" )
parent.addChild( __children["SkinGeometryPathFilter"] )
__children["SkinGeometryPathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SkinGeometryPathFilter"].addChild( Gaffer.BoolPlug( "__uiOutputConnectionsMinimised", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MiniGrowCurves"] = MiniGaffer.MiniGrowCurves( "MiniGrowCurves" )
parent.addChild( __children["MiniGrowCurves"] )
__children["MiniGrowCurves"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CurveLengthAndCVs"] = GafferOSL.OSLObject( "CurveLengthAndCVs" )
parent.addChild( __children["CurveLengthAndCVs"] )
__children["CurveLengthAndCVs"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "customInt", Gaffer.IntPlug( "value", defaultValue = 0, ), True, "primitiveVariable", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["CurveLengthAndCVs"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "customFloat", Gaffer.FloatPlug( "value", defaultValue = 0.0, ), True, "primitiveVariable1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["CurveLengthAndCVs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GroomGeometryPathFilter"] = GafferScene.PathFilter( "GroomGeometryPathFilter" )
parent.addChild( __children["GroomGeometryPathFilter"] )
__children["GroomGeometryPathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["GroomGeometryPathFilter"].addChild( Gaffer.BoolPlug( "__uiOutputConnectionsMinimised", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ClosestPointSampler"] = GafferScene.ClosestPointSampler( "ClosestPointSampler" )
parent.addChild( __children["ClosestPointSampler"] )
__children["ClosestPointSampler"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MeshNormals"] = GafferScene.MeshNormals( "MeshNormals" )
parent.addChild( __children["MeshNormals"] )
__children["MeshNormals"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"] = GafferScene.Plane( "Plane" )
parent.addChild( __children["Plane"] )
__children["Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CreatePref"] = GafferScene.ShufflePrimitiveVariables( "CreatePref" )
parent.addChild( __children["CreatePref"] )
__children["CreatePref"]["shuffles"].addChild( Gaffer.ShufflePlug( "shuffle0", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CreatePref"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CurvesRigidBind"] = Gaffer.Reference( "CurvesRigidBind" )
parent.addChild( __children["CurvesRigidBind"] )
__children["CurvesRigidBind"].load( "curvesRigidBind.grf" )
__children["CurvesRigidBind"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLObject1"] = GafferOSL.OSLObject( "OSLObject1" )
parent.addChild( __children["OSLObject1"] )
__children["OSLObject1"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "P", Gaffer.V3fPlug( "value", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Point ), True, "primitiveVariable", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLObject1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"] = GafferOSL.OSLCode( "OSLCode" )
parent.addChild( __children["OSLCode"] )
__children["OSLCode"]["parameters"].addChild( Gaffer.V3fPlug( "inP", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Point ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.FloatPlug( "offset", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.FloatPlug( "amplitude", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.V3fPlug( "outP", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Point ) )
__children["OSLCode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InPoint"] = GafferOSL.OSLShader( "InPoint" )
parent.addChild( __children["InPoint"] )
__children["InPoint"].loadShader( "ObjectProcessing/InPoint" )
__children["InPoint"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MeshNormals1"] = GafferScene.MeshNormals( "MeshNormals1" )
parent.addChild( __children["MeshNormals1"] )
__children["MeshNormals1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Prune"] = GafferScene.Prune( "Prune" )
parent.addChild( __children["Prune"] )
__children["Prune"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"] = Gaffer.Backdrop( "Backdrop" )
parent.addChild( __children["Backdrop"] )
__children["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"] = Gaffer.Backdrop( "Backdrop1" )
parent.addChild( __children["Backdrop1"] )
__children["Backdrop1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot"] = Gaffer.Dot( "Dot" )
parent.addChild( __children["Dot"] )
__children["Dot"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot1"] = Gaffer.Dot( "Dot1" )
parent.addChild( __children["Dot1"] )
__children["Dot1"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot2"] = Gaffer.Dot( "Dot2" )
parent.addChild( __children["Dot2"] )
__children["Dot2"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot3"] = Gaffer.Dot( "Dot3" )
parent.addChild( __children["Dot3"] )
__children["Dot3"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"] = Gaffer.Backdrop( "Backdrop2" )
parent.addChild( __children["Backdrop2"] )
__children["Backdrop2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot4"] = Gaffer.Dot( "Dot4" )
parent.addChild( __children["Dot4"] )
__children["Dot4"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot5"] = Gaffer.Dot( "Dot5" )
parent.addChild( __children["Dot5"] )
__children["Dot5"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot5"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 36777 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["miniExamplesRoot"]["name"], 'readOnly', True )
__children["Scatter"]["in"].setInput( __children["Dot4"]["out"] )
__children["Scatter"]["filter"].setInput( __children["SkinGeometryPathFilter"]["out"] )
__children["Scatter"]["destination"].setValue( '/' )
__children["Scatter"]["name"].setValue( 'curves' )
__children["Scatter"]["density"].setValue( 524.3403930664062 )
__children["Scatter"]["__uiPosition"].setValue( imath.V2f( -68.627182, 6.63472176 ) )
__children["SkinGeometryPathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/plane' ] ) )
__children["SkinGeometryPathFilter"]["__uiPosition"].setValue( imath.V2f( 1.19768333, 38.9141121 ) )
__children["SkinGeometryPathFilter"]["__uiOutputConnectionsMinimised"].setValue( True )
__children["MiniGrowCurves"]["in"].setInput( __children["ClosestPointSampler"]["out"] )
__children["MiniGrowCurves"]["filter"].setInput( __children["GroomGeometryPathFilter"]["out"] )
__children["MiniGrowCurves"]["__uiPosition"].setValue( imath.V2f( -67.127182, -23.7100487 ) )
__children["CurveLengthAndCVs"]["in"].setInput( __children["Scatter"]["out"] )
__children["CurveLengthAndCVs"]["filter"].setInput( __children["GroomGeometryPathFilter"]["out"] )
__children["CurveLengthAndCVs"]["primitiveVariables"]["primitiveVariable"]["name"].setValue( 'NumCVs' )
__children["CurveLengthAndCVs"]["primitiveVariables"]["primitiveVariable"]["value"].setValue( 10 )
__children["CurveLengthAndCVs"]["primitiveVariables"]["primitiveVariable1"]["name"].setValue( 'CurveLength' )
__children["CurveLengthAndCVs"]["primitiveVariables"]["primitiveVariable1"]["value"].setValue( 0.05000000074505806 )
__children["CurveLengthAndCVs"]["__uiPosition"].setValue( imath.V2f( -68.627182, -1.84731007 ) )
__children["GroomGeometryPathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/curves' ] ) )
__children["GroomGeometryPathFilter"]["__uiPosition"].setValue( imath.V2f( 8.71354294, -25.5727329 ) )
__children["GroomGeometryPathFilter"]["__uiOutputConnectionsMinimised"].setValue( True )
__children["ClosestPointSampler"]["in"].setInput( __children["CurveLengthAndCVs"]["out"] )
__children["ClosestPointSampler"]["filter"].setInput( __children["GroomGeometryPathFilter"]["out"] )
__children["ClosestPointSampler"]["source"].setInput( __children["Dot3"]["out"] )
__children["ClosestPointSampler"]["sourceLocation"].setValue( '/plane' )
__children["ClosestPointSampler"]["primitiveVariables"].setValue( 'N' )
__children["ClosestPointSampler"]["__uiPosition"].setValue( imath.V2f( -67.127182, -11.9340439 ) )
__children["MeshNormals"]["in"].setInput( __children["Plane"]["out"] )
__children["MeshNormals"]["filter"].setInput( __children["SkinGeometryPathFilter"]["out"] )
__children["MeshNormals"]["__uiPosition"].setValue( imath.V2f( -68.5052261, 40.8385429 ) )
__children["Plane"]["transform"]["rotate"].setValue( imath.V3f( -90, 0, 0 ) )
__children["Plane"]["dimensions"].setValue( imath.V2f( 5, 5 ) )
__children["Plane"]["divisions"].setValue( imath.V2i( 64, 64 ) )
__children["Plane"]["__uiPosition"].setValue( imath.V2f( -68.5052261, 49.0026054 ) )
__children["CreatePref"]["in"].setInput( __children["MeshNormals"]["out"] )
__children["CreatePref"]["filter"].setInput( __children["SkinGeometryPathFilter"]["out"] )
__children["CreatePref"]["shuffles"]["shuffle0"]["source"].setValue( 'P' )
__children["CreatePref"]["shuffles"]["shuffle0"]["destination"].setValue( 'Pref' )
__children["CreatePref"]["__uiPosition"].setValue( imath.V2f( -68.5052261, 32.6744804 ) )
Gaffer.Metadata.registerValue( __children["CurvesRigidBind"], 'icon', 'mini.png' )
Gaffer.Metadata.registerValue( __children["CurvesRigidBind"], 'description', 'A container for "subgraphs" - node networks which exist inside the\nBox and can be exposed by promoting selected internal plugs onto the\noutside of the Box.\n\nBoxes can be used as an organisational tool for simplifying large\ngraphs by collapsing them into sections which perform distinct tasks.\nThey are also used for authoring files to be used with the Reference\nnode.' )
Gaffer.Metadata.registerValue( __children["CurvesRigidBind"], 'nodeGadget:color', imath.Color3f( 0.25, 0.349999964, 0.5 ) )
__children["CurvesRigidBind"]["animGeoIN"].setInput( __children["MeshNormals1"]["out"] )
__children["CurvesRigidBind"]["curvesIN"].setInput( __children["Prune"]["out"] )
__children["CurvesRigidBind"]["curvesFilterIN"].setInput( __children["GroomGeometryPathFilter"]["out"] )
__children["CurvesRigidBind"]["curvesLocation"].setValue( '/curves' )
__children["CurvesRigidBind"]["bindMeshLocation"].setValue( '/plane' )
__children["CurvesRigidBind"]["staticGeoIN"].setInput( __children["Dot1"]["out"] )
__children["CurvesRigidBind"]["__uiPosition"].setValue( imath.V2f( -38.0179253, -76.9903946 ) )
__children["OSLObject1"]["in"].setInput( __children["Dot"]["out"] )
__children["OSLObject1"]["filter"].setInput( __children["SkinGeometryPathFilter"]["out"] )
__children["OSLObject1"]["primitiveVariables"]["primitiveVariable"]["value"].setInput( __children["OSLCode"]["out"]["outP"] )
__children["OSLObject1"]["__uiPosition"].setValue( imath.V2f( -61.5944366, -50.3390312 ) )
__children["OSLCode"]["parameters"]["inP"].setInput( __children["InPoint"]["out"]["value"] )
__children["OSLCode"]["parameters"]["offset"].setValue( -1.7551000118255615 )
__children["OSLCode"]["parameters"]["amplitude"].setValue( 0.27880001068115234 )
__children["OSLCode"]["code"].setValue( 'outP = inP + noise(inP* 2 + offset) * amplitude;' )
__children["OSLCode"]["__uiPosition"].setValue( imath.V2f( -75.0565948, -49.7390327 ) )
__children["InPoint"]["__uiPosition"].setValue( imath.V2f( -89.1862793, -48.539032 ) )
__children["MeshNormals1"]["in"].setInput( __children["OSLObject1"]["out"] )
__children["MeshNormals1"]["filter"].setInput( __children["SkinGeometryPathFilter"]["out"] )
__children["MeshNormals1"]["__uiPosition"].setValue( imath.V2f( -61.5944366, -56.0030937 ) )
__children["Prune"]["in"].setInput( __children["Dot"]["out"] )
__children["Prune"]["filter"].setInput( __children["SkinGeometryPathFilter"]["out"] )
__children["Prune"]["__uiPosition"].setValue( imath.V2f( -38.0179253, -57.8849754 ) )
__children["Backdrop"]["title"].setValue( 'Generate Test Curves' )
__children["Backdrop"]["__uiPosition"].setValue( imath.V2f( -85.2804718, 8.18687057 ) )
__children["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -6.9621582, -40.5735893 ), imath.V2f( 37.9280014, 11.3999996 ) ) )
__children["Backdrop1"]["title"].setValue( 'Deform Skin Mesh' )
__children["Backdrop1"]["__uiPosition"].setValue( imath.V2f( -77.0794525, -52.1589279 ) )
__children["Backdrop1"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -24.078764, -8.92619705 ), imath.V2f( 30.078764, 14.9261971 ) ) )
__children["Dot"]["in"].setInput( __children["MiniGrowCurves"]["out"] )
__children["Dot"]["__uiPosition"].setValue( imath.V2f( -61.5944366, -35.3237228 ) )
__children["Dot1"]["in"].setInput( __children["ClosestPointSampler"]["out"] )
__children["Dot1"]["__uiPosition"].setValue( imath.V2f( -20.4468117, -43.2761993 ) )
__children["Dot2"]["in"].setInput( __children["CreatePref"]["out"] )
__children["Dot2"]["__uiPosition"].setValue( imath.V2f( -52.4333534, 22.4737949 ) )
__children["Dot3"]["in"].setInput( __children["Dot2"]["out"] )
__children["Dot3"]["__uiPosition"].setValue( imath.V2f( -52.4333534, -4.60201263 ) )
__children["Backdrop2"]["title"].setValue( 'Generate Skin Geometry' )
__children["Backdrop2"]["__uiPosition"].setValue( imath.V2f( -68.5052261, 40.8385429 ) )
__children["Backdrop2"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -22.3012085, -16.0796204 ), imath.V2f( 21.1591225, 19.2460938 ) ) )
__children["Dot4"]["in"].setInput( __children["CreatePref"]["out"] )
__children["Dot4"]["__uiPosition"].setValue( imath.V2f( -68.5266571, 22.7117996 ) )
__children["Dot5"]["in"].setInput( __children["CurvesRigidBind"]["out"] )
Gaffer.Metadata.registerValue( __children["Dot5"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["Dot5"]["out"], 'noduleLayout:section', 'bottom' )
__children["Dot5"]["__uiPosition"].setValue( imath.V2f( -38.0179253, -87.4112549 ) )


del __children

