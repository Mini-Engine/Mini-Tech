import Gaffer
import GafferImage
import GafferScene
import IECore
import MiniGaffer
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 4, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 2, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["renderPlane"] = GafferScene.Plane( "renderPlane" )
parent.addChild( __children["renderPlane"] )
__children["renderPlane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MiniPointBind"] = MiniGaffer.MiniPointBind( "MiniPointBind" )
parent.addChild( __children["MiniPointBind"] )
__children["MiniPointBind"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MergeScenes"] = GafferScene.MergeScenes( "MergeScenes" )
parent.addChild( __children["MergeScenes"] )
__children["MergeScenes"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MergeScenes"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["cagePlane"] = GafferScene.Plane( "cagePlane" )
parent.addChild( __children["cagePlane"] )
__children["cagePlane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["renderPlaneFliter"] = GafferScene.PathFilter( "renderPlaneFliter" )
parent.addChild( __children["renderPlaneFliter"] )
__children["renderPlaneFliter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["renderPlaneFliter"].addChild( Gaffer.BoolPlug( "__uiOutputConnectionsMinimised", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MiniPointDeformer"] = MiniGaffer.MiniPointDeformer( "MiniPointDeformer" )
parent.addChild( __children["MiniPointDeformer"] )
__children["MiniPointDeformer"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DeformTransform"] = Gaffer.Reference( "DeformTransform" )
parent.addChild( __children["DeformTransform"] )
__children["DeformTransform"].load( "makeDeformTransform.grf" )
__children["DeformTransform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["cagePlaneFilter"] = GafferScene.PathFilter( "cagePlaneFilter" )
parent.addChild( __children["cagePlaneFilter"] )
__children["cagePlaneFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["cagePlaneFilter"].addChild( Gaffer.BoolPlug( "__uiOutputConnectionsMinimised", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShufflePrimitiveVariables"] = GafferScene.ShufflePrimitiveVariables( "ShufflePrimitiveVariables" )
parent.addChild( __children["ShufflePrimitiveVariables"] )
__children["ShufflePrimitiveVariables"]["shuffles"].addChild( Gaffer.ShufflePlug( "shuffle0", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShufflePrimitiveVariables"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Transform"] = GafferScene.Transform( "Transform" )
parent.addChild( __children["Transform"] )
__children["Transform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FreezeTransform"] = GafferScene.FreezeTransform( "FreezeTransform" )
parent.addChild( __children["FreezeTransform"] )
__children["FreezeTransform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CopyPrimitiveVariables"] = GafferScene.CopyPrimitiveVariables( "CopyPrimitiveVariables" )
parent.addChild( __children["CopyPrimitiveVariables"] )
__children["CopyPrimitiveVariables"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"] = Gaffer.Expression( "Expression" )
parent.addChild( __children["Expression"] )
__children["Expression"]["__out"].addChild( Gaffer.FloatPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"] = Gaffer.Backdrop( "Backdrop" )
parent.addChild( __children["Backdrop"] )
__children["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"] = Gaffer.Backdrop( "Backdrop1" )
parent.addChild( __children["Backdrop1"] )
__children["Backdrop1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"] = Gaffer.Backdrop( "Backdrop2" )
parent.addChild( __children["Backdrop2"] )
__children["Backdrop2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"] = Gaffer.Backdrop( "Backdrop3" )
parent.addChild( __children["Backdrop3"] )
__children["Backdrop3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["frame"].setValue( 16.0 )
parent["variables"]["imageCataloguePort"]["value"].setValue( 38013 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["openColorIO"]["displayTransform"].setValue( 'sRGB - Display/ACES 1.0 - SDR Video' )
__children["renderPlane"]["name"].setValue( 'renderPlane' )
__children["renderPlane"]["dimensions"].setValue( imath.V2f( 2, 2 ) )
__children["renderPlane"]["divisions"].setValue( imath.V2i( 50, 50 ) )
__children["renderPlane"]["__uiPosition"].setValue( imath.V2f( 7.80939865, -19.0343666 ) )
__children["MiniPointBind"]["in"].setInput( __children["MergeScenes"]["out"] )
__children["MiniPointBind"]["filter"].setInput( __children["renderPlaneFliter"]["out"] )
__children["MiniPointBind"]["maxDistance"].setValue( 1.0 )
__children["MiniPointBind"]["maxWeights"].setValue( 5 )
__children["MiniPointBind"]["__uiPosition"].setValue( imath.V2f( -5.36391449, -56.2199783 ) )
__children["MergeScenes"]["in"][0].setInput( __children["cagePlane"]["out"] )
__children["MergeScenes"]["in"][1].setInput( __children["renderPlane"]["out"] )
__children["MergeScenes"]["__uiPosition"].setValue( imath.V2f( -5.38948202, -29.7878876 ) )
__children["cagePlane"]["name"].setValue( 'cage' )
__children["cagePlane"]["__uiPosition"].setValue( imath.V2f( -16.1346588, -19.1680412 ) )
__children["renderPlaneFliter"]["paths"].setValue( IECore.StringVectorData( [ '/renderPlane' ] ) )
__children["renderPlaneFliter"]["__uiPosition"].setValue( imath.V2f( 45.7089958, -49.8132324 ) )
__children["renderPlaneFliter"]["__uiOutputConnectionsMinimised"].setValue( True )
__children["MiniPointDeformer"]["in"].setInput( __children["DeformTransform"]["out"] )
__children["MiniPointDeformer"]["filter"].setInput( __children["renderPlaneFliter"]["out"] )
__children["MiniPointDeformer"]["__uiPosition"].setValue( imath.V2f( -4.90082932, -141.013916 ) )
Gaffer.Metadata.registerValue( __children["DeformTransform"], 'icon', 'mini.png' )
__children["DeformTransform"]["in"].setInput( __children["CopyPrimitiveVariables"]["out"] )
__children["DeformTransform"]["filter"].setInput( __children["cagePlaneFilter"]["out"] )
__children["DeformTransform"]["__uiPosition"].setValue( imath.V2f( -4.90082932, -132.513916 ) )
__children["cagePlaneFilter"]["paths"].setValue( IECore.StringVectorData( [ '/cage' ] ) )
__children["cagePlaneFilter"]["__uiPosition"].setValue( imath.V2f( 45.9103813, -74.3997879 ) )
__children["cagePlaneFilter"]["__uiOutputConnectionsMinimised"].setValue( True )
__children["ShufflePrimitiveVariables"]["in"].setInput( __children["MiniPointBind"]["out"] )
__children["ShufflePrimitiveVariables"]["filter"].setInput( __children["cagePlaneFilter"]["out"] )
__children["ShufflePrimitiveVariables"]["shuffles"]["shuffle0"]["source"].setValue( 'P' )
__children["ShufflePrimitiveVariables"]["shuffles"]["shuffle0"]["destination"].setValue( 'Pref' )
__children["ShufflePrimitiveVariables"]["__uiPosition"].setValue( imath.V2f( -5.36391449, -83.5975342 ) )
__children["Transform"]["in"].setInput( __children["ShufflePrimitiveVariables"]["out"] )
__children["Transform"]["filter"].setInput( __children["cagePlaneFilter"]["out"] )
__children["Transform"]["transform"]["rotate"]["y"].setInput( __children["Expression"]["__out"]["p0"] )
__children["Transform"]["__uiPosition"].setValue( imath.V2f( 2.7425766, -91.7615967 ) )
__children["FreezeTransform"]["in"].setInput( __children["Transform"]["out"] )
__children["FreezeTransform"]["filter"].setInput( __children["cagePlaneFilter"]["out"] )
__children["FreezeTransform"]["__uiPosition"].setValue( imath.V2f( 5.18483925, -99.9256592 ) )
__children["CopyPrimitiveVariables"]["in"].setInput( __children["FreezeTransform"]["out"] )
__children["CopyPrimitiveVariables"]["filter"].setInput( __children["cagePlaneFilter"]["out"] )
__children["CopyPrimitiveVariables"]["source"].setInput( __children["ShufflePrimitiveVariables"]["out"] )
__children["CopyPrimitiveVariables"]["primitiveVariables"].setValue( 'Pref' )
__children["CopyPrimitiveVariables"]["sourceLocation"].setValue( '/cage' )
__children["CopyPrimitiveVariables"]["__uiPosition"].setValue( imath.V2f( -6.86391449, -111.877563 ) )
__children["Expression"]["__uiPosition"].setValue( imath.V2f( -21.1515579, -84.090332 ) )
__children["Backdrop"]["title"].setValue( 'Create Scene - Two planes' )
__children["Backdrop"]["description"].setValue( '/cage - low resolution cage plane\n/renderPlane - *high* resolution render plane' )
__children["Backdrop"]["__uiPosition"].setValue( imath.V2f( -5.24807978, -23.0533104 ) )
__children["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -21.0147533, -11.8166094 ), imath.V2f( 25.5183907, 17.8166084 ) ) )
__children["Backdrop1"]["title"].setValue( 'Generate Pref & Animate Cage' )
__children["Backdrop1"]["description"].setValue( 'Rotatation of cage geometry is drivent by the frame number, scrub frame to rotate the cage.\n\nWhen the animated geometry has Pref this can be skipped' )
__children["Backdrop1"]["__uiPosition"].setValue( imath.V2f( -5.41768646, -94.8834534 ) )
__children["Backdrop1"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -19.7338715, -22.0761414 ), imath.V2f( 25.7338715, 28.0761414 ) ) )
__children["Backdrop2"]["title"].setValue( 'Bind Render Geometry to Cage' )
__children["Backdrop2"]["description"].setValue( 'Note this can be done in different preprocess script which is only executed when the cage or render geometry is updated.' )
__children["Backdrop2"]["__uiPosition"].setValue( imath.V2f( -15.9648399, -57.7498016 ) )
__children["Backdrop2"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -9.28219604, -6.61356735 ), imath.V2f( 36.1554451, 19.2771568 ) ) )
__children["Backdrop3"]["title"].setValue( 'Cage Basis and deform' )
__children["Backdrop3"]["__uiPosition"].setValue( imath.V2f( -14.3964195, -136.554199 ) )
__children["Backdrop3"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10.724823, -12.2604218 ), imath.V2f( 34.824585, 17.1250572 ) ) )
__children["Expression"]["__engine"].setValue( 'python' )
__children["Expression"]["__expression"].setValue( 'rotation = context.get("frame", 0)\nparent["__out"]["p0"] = rotation\n\n' )


del __children

