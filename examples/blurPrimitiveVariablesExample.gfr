import Gaffer
import GafferImage
import GafferOSL
import GafferScene
import IECore
import MiniGaffer
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Plane"] = GafferScene.Plane( "Plane" )
parent.addChild( __children["Plane"] )
__children["Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLObject"] = GafferOSL.OSLObject( "OSLObject" )
parent.addChild( __children["OSLObject"] )
__children["OSLObject"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "Cs", Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "primitiveVariable", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLObject"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"] = GafferOSL.OSLCode( "OSLCode" )
parent.addChild( __children["OSLCode"] )
__children["OSLCode"]["parameters"].addChild( Gaffer.FloatPlug( "radius", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.Color3fPlug( "output1", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BlurPrimitiveVariables"] = MiniGaffer.MiniBlurPrimitiveVariables( "BlurPrimitiveVariables" )
parent.addChild( __children["BlurPrimitiveVariables"] )
__children["BlurPrimitiveVariables"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane1"] = GafferScene.Plane( "Plane1" )
parent.addChild( __children["Plane1"] )
__children["Plane1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLObject1"] = GafferOSL.OSLObject( "OSLObject1" )
parent.addChild( __children["OSLObject1"] )
__children["OSLObject1"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "Cs", Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "primitiveVariable", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLObject1"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "customFloat", Gaffer.FloatPlug( "value", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "primitiveVariable1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLObject1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode1"] = GafferOSL.OSLCode( "OSLCode1" )
parent.addChild( __children["OSLCode1"] )
__children["OSLCode1"]["parameters"].addChild( Gaffer.FloatPlug( "radius", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode1"]["out"].addChild( Gaffer.Color3fPlug( "output1", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode1"]["out"].addChild( Gaffer.FloatPlug( "output2", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter1"] = GafferScene.PathFilter( "PathFilter1" )
parent.addChild( __children["PathFilter1"] )
__children["PathFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BlurPrimitiveVariables1"] = MiniGaffer.MiniBlurPrimitiveVariables( "BlurPrimitiveVariables1" )
parent.addChild( __children["BlurPrimitiveVariables1"] )
__children["BlurPrimitiveVariables1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cow"] = GafferScene.SceneReader( "Cow" )
parent.addChild( __children["Cow"] )
__children["Cow"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BlurPrimitiveVariables2"] = MiniGaffer.MiniBlurPrimitiveVariables( "BlurPrimitiveVariables2" )
parent.addChild( __children["BlurPrimitiveVariables2"] )
__children["BlurPrimitiveVariables2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter2"] = GafferScene.PathFilter( "PathFilter2" )
parent.addChild( __children["PathFilter2"] )
__children["PathFilter2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 34035 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["Plane"]["divisions"].setValue( imath.V2i( 100, 100 ) )
__children["Plane"]["__uiPosition"].setValue( imath.V2f( 2.94999981, 12.2665977 ) )
__children["OSLObject"]["in"].setInput( __children["Plane"]["out"] )
__children["OSLObject"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["OSLObject"]["primitiveVariables"]["primitiveVariable"]["value"].setInput( __children["OSLCode"]["out"]["output1"] )
__children["OSLObject"]["__uiPosition"].setValue( imath.V2f( 2.95089889, 4.10253525 ) )
__children["OSLCode"]["parameters"]["radius"].setValue( 0.25 )
__children["OSLCode"]["code"].setValue( 'output1 = length( P ) < radius;' )
__children["OSLCode"]["__uiPosition"].setValue( imath.V2f( -10.5112591, 4.70253515 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/plane' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( 17.5509014, 10.0845671 ) )
__children["BlurPrimitiveVariables"]["in"].setInput( __children["OSLObject"]["out"] )
__children["BlurPrimitiveVariables"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["BlurPrimitiveVariables"]["primitiveVariables"].setValue( 'Cs' )
__children["BlurPrimitiveVariables"]["iterations"].setValue( 50 )
__children["BlurPrimitiveVariables"]["__uiPosition"].setValue( imath.V2f( 2.9500761, -4.06152725 ) )
__children["Plane1"]["divisions"].setValue( imath.V2i( 100, 100 ) )
__children["Plane1"]["__uiPosition"].setValue( imath.V2f( 57.5158195, 12.4819193 ) )
__children["OSLObject1"]["in"].setInput( __children["Plane1"]["out"] )
__children["OSLObject1"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["OSLObject1"]["primitiveVariables"]["primitiveVariable"]["value"].setInput( __children["OSLCode1"]["out"]["output1"] )
__children["OSLObject1"]["primitiveVariables"]["primitiveVariable1"]["name"].setValue( 'weight' )
__children["OSLObject1"]["primitiveVariables"]["primitiveVariable1"]["value"].setInput( __children["OSLCode1"]["out"]["output2"] )
__children["OSLObject1"]["__uiPosition"].setValue( imath.V2f( 57.5167198, 4.31785965 ) )
__children["OSLCode1"]["parameters"]["radius"].setValue( 0.25 )
__children["OSLCode1"]["code"].setValue( 'output1 = length( P ) < radius;\noutput2 = P[1] >= 0.0 ? 1.0 : 0.2;' )
__children["OSLCode1"]["__uiPosition"].setValue( imath.V2f( 43.7169151, 4.91785955 ) )
__children["PathFilter1"]["paths"].setValue( IECore.StringVectorData( [ '/plane' ] ) )
__children["PathFilter1"]["__uiPosition"].setValue( imath.V2f( 72.116684, 10.2998896 ) )
__children["BlurPrimitiveVariables1"]["in"].setInput( __children["OSLObject1"]["out"] )
__children["BlurPrimitiveVariables1"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["BlurPrimitiveVariables1"]["primitiveVariables"].setValue( 'Cs' )
__children["BlurPrimitiveVariables1"]["iterations"].setValue( 25 )
__children["BlurPrimitiveVariables1"]["weight"].setValue( 'weight' )
__children["BlurPrimitiveVariables1"]["__uiPosition"].setValue( imath.V2f( 57.5158958, -3.84620333 ) )
__children["Cow"]["fileName"].setValue( '${GAFFER_ROOT}/resources/cow/cow.scc' )
__children["Cow"]["__uiPosition"].setValue( imath.V2f( 101.71093, 12.4106073 ) )
__children["BlurPrimitiveVariables2"]["in"].setInput( __children["Cow"]["out"] )
__children["BlurPrimitiveVariables2"]["filter"].setInput( __children["PathFilter2"]["out"] )
__children["BlurPrimitiveVariables2"]["weighting"].setValue( 1 )
__children["BlurPrimitiveVariables2"]["primitiveVariables"].setValue( 'P' )
__children["BlurPrimitiveVariables2"]["iterations"].setValue( 20 )
__children["BlurPrimitiveVariables2"]["__uiPosition"].setValue( imath.V2f( 101.71093, 4.24654484 ) )
__children["PathFilter2"]["paths"].setValue( IECore.StringVectorData( [ '/cow' ] ) )
__children["PathFilter2"]["__uiPosition"].setValue( imath.V2f( 117.295158, 10.3285761 ) )


del __children

