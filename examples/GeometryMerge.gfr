import Gaffer
import GafferImage
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 4, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Cube"] = GafferScene.Cube( "Cube" )
parent.addChild( __children["Cube"] )
__children["Cube"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Sphere"] = GafferScene.Sphere( "Sphere" )
parent.addChild( __children["Sphere"] )
__children["Sphere"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"] = GafferScene.Group( "Group" )
parent.addChild( __children["Group"] )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"] = GafferScene.Plane( "Plane" )
parent.addChild( __children["Plane"] )
__children["Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SceneReader"] = GafferScene.SceneReader( "SceneReader" )
parent.addChild( __children["SceneReader"] )
__children["SceneReader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MergeCurves"] = Gaffer.Reference( "MergeCurves" )
parent.addChild( __children["MergeCurves"] )
__children["MergeCurves"].load( "MiniMerge.grf" )
__children["MergeCurves"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter1"] = GafferScene.PathFilter( "PathFilter1" )
parent.addChild( __children["PathFilter1"] )
__children["PathFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Isolate"] = GafferScene.Isolate( "Isolate" )
parent.addChild( __children["Isolate"] )
__children["Isolate"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter2"] = GafferScene.PathFilter( "PathFilter2" )
parent.addChild( __children["PathFilter2"] )
__children["PathFilter2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DeletePrimitiveVariables"] = GafferScene.DeletePrimitiveVariables( "DeletePrimitiveVariables" )
parent.addChild( __children["DeletePrimitiveVariables"] )
__children["DeletePrimitiveVariables"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group1"] = GafferScene.Group( "Group1" )
parent.addChild( __children["Group1"] )
__children["Group1"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FreezeTransform"] = GafferScene.FreezeTransform( "FreezeTransform" )
parent.addChild( __children["FreezeTransform"] )
__children["FreezeTransform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MergeMeshes"] = Gaffer.Reference( "MergeMeshes" )
parent.addChild( __children["MergeMeshes"] )
__children["MergeMeshes"].load( "MiniMerge.grf" )
__children["MergeMeshes"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MeshToPoints"] = GafferScene.MeshToPoints( "MeshToPoints" )
parent.addChild( __children["MeshToPoints"] )
__children["MeshToPoints"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MergePoints"] = Gaffer.Reference( "MergePoints" )
parent.addChild( __children["MergePoints"] )
__children["MergePoints"].load( "MiniMerge.grf" )
__children["MergePoints"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["frame"].setValue( 100.0 )
parent["variables"]["imageCataloguePort"]["value"].setValue( 38657 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["miniExamplesRoot"]["name"], 'readOnly', True )
__children["Cube"]["__uiPosition"].setValue( imath.V2f( -58.7523193, 2.14269352 ) )
__children["Sphere"]["radius"].setValue( 0.75 )
__children["Sphere"]["divisions"].setValue( imath.V2i( 14, 14 ) )
__children["Sphere"]["__uiPosition"].setValue( imath.V2f( -45.7523193, 2.14269352 ) )
__children["Group"]["in"][0].setInput( __children["Cube"]["out"] )
__children["Group"]["in"][1].setInput( __children["Sphere"]["out"] )
__children["Group"]["in"][2].setInput( __children["Plane"]["out"] )
__children["Group"]["__uiPosition"].setValue( imath.V2f( -44.2540588, -6.02137136 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/group/cube', '/group/plane', '/group/sphere' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( -24.3381557, -8.30029297 ) )
__children["Plane"]["dimensions"].setValue( imath.V2f( 5, 5 ) )
__children["Plane"]["divisions"].setValue( imath.V2i( 50, 50 ) )
__children["Plane"]["__uiPosition"].setValue( imath.V2f( -32.7523193, 2.14269352 ) )
__children["SceneReader"]["fileName"].setValue( '${mini:examplesRoot}/data/curves.usda' )
__children["SceneReader"]["__uiPosition"].setValue( imath.V2f( 9.84105682, 12.5810184 ) )
Gaffer.Metadata.registerValue( __children["MergeCurves"], 'icon', 'mini.png' )
__children["MergeCurves"]["in"].setInput( __children["FreezeTransform"]["out"] )
__children["MergeCurves"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["MergeCurves"]["parent"].setValue( '/group' )
__children["MergeCurves"]["__uiPosition"].setValue( imath.V2f( 15.6300783, -20.2432003 ) )
__children["PathFilter1"]["paths"].setValue( IECore.StringVectorData( [ '/group/Cubic/Ribbons/ConstantWidth', '/group/Cubic/Ribbons/VaryingWidth', '/group/Cubic/Ribbons/VertexWidth' ] ) )
__children["PathFilter1"]["__uiPosition"].setValue( imath.V2f( 27.2798233, 2.3349247 ) )
__children["Isolate"]["in"].setInput( __children["MergeCurves"]["out"] )
__children["Isolate"]["filter"].setInput( __children["PathFilter2"]["out"] )
__children["Isolate"]["__uiPosition"].setValue( imath.V2f( 15.6300783, -28.5752316 ) )
__children["PathFilter2"]["paths"].setValue( IECore.StringVectorData( [ '/group/merged' ] ) )
__children["PathFilter2"]["__uiPosition"].setValue( imath.V2f( 28.7967072, -22.4931889 ) )
__children["DeletePrimitiveVariables"]["in"].setInput( __children["Group1"]["out"] )
__children["DeletePrimitiveVariables"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["DeletePrimitiveVariables"]["names"].setValue( 'width' )
__children["DeletePrimitiveVariables"]["__uiPosition"].setValue( imath.V2f( 11.3359756, -3.74710751 ) )
__children["Group1"]["in"][0].setInput( __children["SceneReader"]["out"] )
__children["Group1"]["__uiPosition"].setValue( imath.V2f( 11.3391037, 4.41695595 ) )
__children["FreezeTransform"]["in"].setInput( __children["DeletePrimitiveVariables"]["out"] )
__children["FreezeTransform"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["FreezeTransform"]["__uiPosition"].setValue( imath.V2f( 13.4827538, -11.911171 ) )
Gaffer.Metadata.registerValue( __children["MergeMeshes"], 'icon', 'mini.png' )
__children["MergeMeshes"]["in"].setInput( __children["Group"]["out"] )
__children["MergeMeshes"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["MergeMeshes"]["parent"].setValue( '/group' )
__children["MergeMeshes"]["__uiPosition"].setValue( imath.V2f( -51.1758003, -14.4831696 ) )
__children["MeshToPoints"]["in"].setInput( __children["Group"]["out"] )
__children["MeshToPoints"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["MeshToPoints"]["adjustBounds"].setValue( False )
__children["MeshToPoints"]["__uiPosition"].setValue( imath.V2f( -37.3381538, -14.3823242 ) )
Gaffer.Metadata.registerValue( __children["MergePoints"], 'icon', 'mini.png' )
__children["MergePoints"]["in"].setInput( __children["MeshToPoints"]["out"] )
__children["MergePoints"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["MergePoints"]["parent"].setValue( '/group' )
__children["MergePoints"]["__uiPosition"].setValue( imath.V2f( -35.8314095, -22.7143555 ) )


del __children

