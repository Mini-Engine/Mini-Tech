import Gaffer
import GafferCycles
import GafferDispatch
import GafferImage
import GafferScene
import IECore
import MiniGaffer
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 4, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["MiniBullet"] = MiniGaffer.MiniBullet( "MiniBullet" )
parent.addChild( __children["MiniBullet"] )
__children["MiniBullet"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"] = GafferScene.Plane( "Plane" )
parent.addChild( __children["Plane"] )
__children["Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Transform2"] = GafferScene.Transform( "Transform2" )
parent.addChild( __children["Transform2"] )
__children["Transform2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter3"] = GafferScene.PathFilter( "PathFilter3" )
parent.addChild( __children["PathFilter3"] )
__children["PathFilter3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MeshToPoints"] = GafferScene.MeshToPoints( "MeshToPoints" )
parent.addChild( __children["MeshToPoints"] )
__children["MeshToPoints"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Instancer1"] = GafferScene.Instancer( "Instancer1" )
parent.addChild( __children["Instancer1"] )
__children["Instancer1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cube2"] = GafferScene.Cube( "Cube2" )
parent.addChild( __children["Cube2"] )
__children["Cube2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CustomAttributes2"] = GafferScene.CustomAttributes( "CustomAttributes2" )
parent.addChild( __children["CustomAttributes2"] )
__children["CustomAttributes2"]["attributes"].addChild( Gaffer.NameValuePlug( "", Gaffer.FloatPlug( "value", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["CustomAttributes2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter5"] = GafferScene.PathFilter( "PathFilter5" )
parent.addChild( __children["PathFilter5"] )
__children["PathFilter5"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FreezeTransform"] = GafferScene.FreezeTransform( "FreezeTransform" )
parent.addChild( __children["FreezeTransform"] )
__children["FreezeTransform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cube3"] = GafferScene.Cube( "Cube3" )
parent.addChild( __children["Cube3"] )
__children["Cube3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cube4"] = GafferScene.Cube( "Cube4" )
parent.addChild( __children["Cube4"] )
__children["Cube4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Transform3"] = GafferScene.Transform( "Transform3" )
parent.addChild( __children["Transform3"] )
__children["Transform3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CustomAttributes3"] = GafferScene.CustomAttributes( "CustomAttributes3" )
parent.addChild( __children["CustomAttributes3"] )
__children["CustomAttributes3"]["attributes"].addChild( Gaffer.NameValuePlug( "", Gaffer.FloatPlug( "value", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["CustomAttributes3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MergeScenes1"] = GafferScene.MergeScenes( "MergeScenes1" )
parent.addChild( __children["MergeScenes1"] )
__children["MergeScenes1"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MergeScenes1"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MergeScenes1"]["in"].addChild( GafferScene.ScenePlug( "in4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MergeScenes1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter6"] = GafferScene.PathFilter( "PathFilter6" )
parent.addChild( __children["PathFilter6"] )
__children["PathFilter6"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CyclesRender"] = GafferCycles.CyclesRender( "CyclesRender" )
parent.addChild( __children["CyclesRender"] )
__children["CyclesRender"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["distant_light"] = GafferCycles.CyclesLight( "distant_light" )
parent.addChild( __children["distant_light"] )
__children["distant_light"].loadShader( "distant_light" )
__children["distant_light"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InteractiveCyclesRender"] = GafferCycles.InteractiveCyclesRender( "InteractiveCyclesRender" )
parent.addChild( __children["InteractiveCyclesRender"] )
__children["InteractiveCyclesRender"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Camera"] = GafferScene.Camera( "Camera" )
parent.addChild( __children["Camera"] )
__children["Camera"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderAssignment"] = GafferScene.ShaderAssignment( "ShaderAssignment" )
parent.addChild( __children["ShaderAssignment"] )
__children["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["principled_bsdf"] = GafferCycles.CyclesShader( "principled_bsdf" )
parent.addChild( __children["principled_bsdf"] )
__children["principled_bsdf"].loadShader( "principled_bsdf" )
__children["principled_bsdf"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter7"] = GafferScene.PathFilter( "PathFilter7" )
parent.addChild( __children["PathFilter7"] )
__children["PathFilter7"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"] = GafferImage.Catalogue( "Catalogue" )
parent.addChild( __children["Catalogue"] )
__children["Catalogue"]["images"].addChild( GafferImage.Catalogue.Image( "Image", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"]["images"].addChild( GafferImage.Catalogue.Image( "Image1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"]["images"].addChild( GafferImage.Catalogue.Image( "Image2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CyclesOptions"] = GafferCycles.CyclesOptions( "CyclesOptions" )
parent.addChild( __children["CyclesOptions"] )
__children["CyclesOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["StandardOptions"] = GafferScene.StandardOptions( "StandardOptions" )
parent.addChild( __children["StandardOptions"] )
__children["StandardOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"] = GafferScene.Outputs( "Outputs" )
parent.addChild( __children["Outputs"] )
__children["Outputs"]["outputs"].addChild( Gaffer.ValuePlug( "output1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "catalogue:imageName", Gaffer.StringPlug( "value", defaultValue = 'Image', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "catalogue_imageName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "quantize", Gaffer.IntVectorDataPlug( "value", defaultValue = IECore.IntVectorData( [ 0, 0, 0, 0 ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "quantize", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"].addChild( Gaffer.ValuePlug( "output2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "quantize", Gaffer.IntVectorDataPlug( "value", defaultValue = IECore.IntVectorData( [ 0, 0, 0, 0 ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "quantize", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"].addChild( Gaffer.ValuePlug( "output3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output3"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output3"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output3"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output3"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output3"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output3"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output3"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output3"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output3"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output3"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output3"]["parameters"].addChild( Gaffer.NameValuePlug( "quantize", Gaffer.IntVectorDataPlug( "value", defaultValue = IECore.IntVectorData( [ 0, 0, 0, 0 ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "quantize", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MiniSubdivideMesh"] = MiniGaffer.MiniSubdivideMesh( "MiniSubdivideMesh" )
parent.addChild( __children["MiniSubdivideMesh"] )
__children["MiniSubdivideMesh"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter8"] = GafferScene.PathFilter( "PathFilter8" )
parent.addChild( __children["PathFilter8"] )
__children["PathFilter8"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["frameRange"]["start"].setValue( 0 )
parent["frameRange"]["end"].setValue( 40 )
parent["frame"].setValue( 31.0 )
parent["variables"]["imageCataloguePort"]["value"].setValue( 33225 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["miniExamplesRoot"]["name"], 'readOnly', True )
__children["MiniBullet"]["in"].setInput( __children["StandardOptions"]["out"] )
__children["MiniBullet"]["__uiPosition"].setValue( imath.V2f( -91.1722183, -86.7883911 ) )
__children["Plane"]["dimensions"].setValue( imath.V2f( 2, 2 ) )
__children["Plane"]["divisions"].setValue( imath.V2i( 20, 20 ) )
__children["Plane"]["__uiPosition"].setValue( imath.V2f( -80.2659607, 32.8521156 ) )
__children["Transform2"]["in"].setInput( __children["Plane"]["out"] )
__children["Transform2"]["filter"].setInput( __children["PathFilter3"]["out"] )
__children["Transform2"]["transform"]["rotate"].setValue( imath.V3f( 90, 0, 0 ) )
__children["Transform2"]["__uiPosition"].setValue( imath.V2f( -80.2659607, 24.6880531 ) )
__children["PathFilter3"]["paths"].setValue( IECore.StringVectorData( [ '/plane' ] ) )
__children["PathFilter3"]["__uiPosition"].setValue( imath.V2f( -59.596035, 25.7247334 ) )
__children["MeshToPoints"]["in"].setInput( __children["Transform2"]["out"] )
__children["MeshToPoints"]["filter"].setInput( __children["PathFilter3"]["out"] )
__children["MeshToPoints"]["adjustBounds"].setValue( False )
__children["MeshToPoints"]["__uiPosition"].setValue( imath.V2f( -80.2659607, 16.5239906 ) )
__children["Instancer1"]["in"].setInput( __children["FreezeTransform"]["out"] )
__children["Instancer1"]["filter"].setInput( __children["PathFilter8"]["out"] )
__children["Instancer1"]["prototypes"].setInput( __children["MiniSubdivideMesh"]["out"] )
__children["Instancer1"]["prototypeIndex"].setValue( 'prototypeIndex' )
__children["Instancer1"]["orientation"].setValue( 'orientation' )
__children["Instancer1"]["scale"].setValue( 'scale' )
__children["Instancer1"]["attributePrefix"].setValue( 'user:' )
__children["Instancer1"]["__uiPosition"].setValue( imath.V2f( -75.5921021, -17.2957573 ) )
__children["Cube2"]["dimensions"]["x"].setValue( 0.07500000298023224 )
__children["Cube2"]["dimensions"]["y"].setInput( __children["Cube2"]["dimensions"]["x"] )
__children["Cube2"]["dimensions"]["z"].setInput( __children["Cube2"]["dimensions"]["x"] )
__children["Cube2"]["__uiPosition"].setValue( imath.V2f( -56.0030594, 8.9241848 ) )
__children["CustomAttributes2"]["in"].setInput( __children["Cube2"]["out"] )
__children["CustomAttributes2"]["filter"].setInput( __children["PathFilter5"]["out"] )
__children["CustomAttributes2"]["attributes"]["member1"]["name"].setValue( 'physics:mass' )
__children["CustomAttributes2"]["attributes"]["member1"]["value"].setValue( 10.0 )
__children["CustomAttributes2"]["__uiPosition"].setValue( imath.V2f( -56.0030594, 0.760122299 ) )
__children["PathFilter5"]["paths"].setValue( IECore.StringVectorData( [ '/cube' ] ) )
__children["PathFilter5"]["__uiPosition"].setValue( imath.V2f( -28.8482285, 3.05596209 ) )
__children["FreezeTransform"]["in"].setInput( __children["MeshToPoints"]["out"] )
__children["FreezeTransform"]["filter"].setInput( __children["PathFilter3"]["out"] )
__children["FreezeTransform"]["__uiPosition"].setValue( imath.V2f( -80.2659607, 8.35992813 ) )
__children["Cube3"]["name"].setValue( 'cube2' )
__children["Cube3"]["__uiPosition"].setValue( imath.V2f( -111.444702, 11.5643187 ) )
__children["Cube4"]["name"].setValue( 'cube2' )
__children["Cube4"]["dimensions"]["x"].setValue( 0.949999988079071 )
__children["Cube4"]["dimensions"]["y"].setInput( __children["Cube4"]["dimensions"]["x"] )
__children["Cube4"]["dimensions"]["z"].setInput( __children["Cube4"]["dimensions"]["x"] )
__children["Cube4"]["__uiPosition"].setValue( imath.V2f( -128.891022, -10.2779236 ) )
__children["Transform3"]["in"].setInput( __children["Cube4"]["out"] )
__children["Transform3"]["filter"].setInput( __children["PathFilter6"]["out"] )
__children["Transform3"]["transform"]["translate"].setValue( imath.V3f( 0, -1, 0 ) )
__children["Transform3"]["transform"]["rotate"].setValue( imath.V3f( 25, 25, 0 ) )
__children["Transform3"]["__uiPosition"].setValue( imath.V2f( -128.891022, -18.4419861 ) )
__children["CustomAttributes3"]["in"].setInput( __children["Transform3"]["out"] )
__children["CustomAttributes3"]["filter"].setInput( __children["PathFilter6"]["out"] )
__children["CustomAttributes3"]["attributes"]["member1"]["name"].setValue( 'physics:mass' )
__children["CustomAttributes3"]["__uiPosition"].setValue( imath.V2f( -128.891022, -28.7077599 ) )
__children["MergeScenes1"]["in"][0].setInput( __children["CustomAttributes3"]["out"] )
__children["MergeScenes1"]["in"][1].setInput( __children["Instancer1"]["out"] )
__children["MergeScenes1"]["in"][2].setInput( __children["distant_light"]["out"] )
__children["MergeScenes1"]["in"][3].setInput( __children["Camera"]["out"] )
__children["MergeScenes1"]["__uiPosition"].setValue( imath.V2f( -104.351547, -44.3553391 ) )
__children["PathFilter6"]["paths"].setValue( IECore.StringVectorData( [ '/cube2' ] ) )
__children["PathFilter6"]["__uiPosition"].setValue( imath.V2f( -107.330605, -18.878336 ) )
__children["CyclesRender"]["in"].setInput( __children["MiniBullet"]["out"] )
__children["CyclesRender"]["__uiPosition"].setValue( imath.V2f( -78.976738, -98.4077454 ) )
__children["distant_light"]["transform"]["rotate"].setValue( imath.V3f( -111.575943, 17.8240986, 31.3022995 ) )
__children["distant_light"]["parameters"]["intensity"].setValue( 4.0 )
__children["distant_light"]["__uiPosition"].setValue( imath.V2f( -86.5810165, -32.5063438 ) )
__children["InteractiveCyclesRender"]["in"].setInput( __children["MiniBullet"]["out"] )
__children["InteractiveCyclesRender"]["__uiPosition"].setValue( imath.V2f( -104.038452, -98.2626572 ) )
__children["Camera"]["transform"]["translate"].setValue( imath.V3f( 2.63410735, 1.86370468, 2.33822298 ) )
__children["Camera"]["transform"]["rotate"].setValue( imath.V3f( -33.2315521, 49.274353, 1.70754754e-06 ) )
__children["Camera"]["__uiPosition"].setValue( imath.V2f( -82.01754, -39.9765739 ) )
__children["ShaderAssignment"]["in"].setInput( __children["MergeScenes1"]["out"] )
__children["ShaderAssignment"]["filter"].setInput( __children["PathFilter7"]["out"] )
__children["ShaderAssignment"]["shader"].setInput( __children["principled_bsdf"]["out"]["BSDF"] )
__children["ShaderAssignment"]["__uiPosition"].setValue( imath.V2f( -104.351547, -54.9002228 ) )
__children["principled_bsdf"]["parameters"]["base_color"].setValue( imath.Color3f( 0.699999988, 0.699999988, 0.699999988 ) )
__children["principled_bsdf"]["parameters"]["metallic"].setValue( 0.5 )
__children["principled_bsdf"]["parameters"]["specular"].setValue( 0.25 )
__children["principled_bsdf"]["__uiPosition"].setValue( imath.V2f( -128.73764, -56.7269554 ) )
__children["PathFilter7"]["paths"].setValue( IECore.StringVectorData( [ '/cube2', '/plane/instances' ] ) )
__children["PathFilter7"]["__uiPosition"].setValue( imath.V2f( -76.2570038, -51.3961372 ) )
__children["Catalogue"]["images"]["Image"]["fileName"].setValue( '/home/tengu/gaffer/projects/default/catalogues/physics/768f84c6cd5f22083e149e6c0db9226e.exr' )
__children["Catalogue"]["images"]["Image1"]["fileName"].setValue( '/home/tengu/gaffer/projects/default/catalogues/physics/a4df21c4fa0d657bd2c0705e2e9c4d04.exr' )
__children["Catalogue"]["images"]["Image2"]["fileName"].setValue( '/home/tengu/gaffer/projects/default/catalogues/physics/e2760ac6cd1946467c23b244d077a304.exr' )
__children["Catalogue"]["imageIndex"].setValue( 3 )
__children["Catalogue"]["directory"].setValue( '${project:rootDirectory}/catalogues/${script:name}' )
__children["Catalogue"]["__uiPosition"].setValue( imath.V2f( -41.9886665, -64.7879028 ) )
__children["CyclesOptions"]["in"].setInput( __children["ShaderAssignment"]["out"] )
__children["CyclesOptions"]["options"]["samples"]["value"].setValue( 512 )
__children["CyclesOptions"]["options"]["aoFactor"]["value"].setValue( 1.0 )
__children["CyclesOptions"]["options"]["useAdaptiveSampling"]["value"].setValue( True )
__children["CyclesOptions"]["options"]["useAdaptiveSampling"]["enabled"].setValue( True )
__children["CyclesOptions"]["__uiPosition"].setValue( imath.V2f( -96.0863876, -66.4601669 ) )
__children["StandardOptions"]["in"].setInput( __children["Outputs"]["out"] )
__children["StandardOptions"]["options"]["renderCamera"]["value"].setValue( '/camera' )
__children["StandardOptions"]["options"]["renderCamera"]["enabled"].setValue( True )
__children["StandardOptions"]["options"]["renderResolution"]["value"].setValue( imath.V2i( 1024, 512 ) )
__children["StandardOptions"]["options"]["renderResolution"]["enabled"].setValue( True )
__children["StandardOptions"]["__uiPosition"].setValue( imath.V2f( -96.0863876, -77.7882919 ) )
__children["Outputs"]["in"].setInput( __children["CyclesOptions"]["out"] )
__children["Outputs"]["outputs"]["output1"]["name"].setValue( 'Interactive/Beauty' )
__children["Outputs"]["outputs"]["output1"]["fileName"].setValue( 'beauty' )
__children["Outputs"]["outputs"]["output1"]["type"].setValue( 'ieDisplay' )
__children["Outputs"]["outputs"]["output1"]["data"].setValue( 'rgba' )
__children["Outputs"]["outputs"]["output2"]["name"].setValue( 'Batch/Beauty' )
__children["Outputs"]["outputs"]["output2"]["fileName"].setValue( '${project:rootDirectory}/renders/${script:name}/beauty/beauty.####.exr' )
__children["Outputs"]["outputs"]["output2"]["type"].setValue( 'exr' )
__children["Outputs"]["outputs"]["output2"]["data"].setValue( 'rgba' )
__children["Outputs"]["outputs"]["output3"]["name"].setValue( 'Interactive/Cycles/Sample_Count' )
__children["Outputs"]["outputs"]["output3"]["fileName"].setValue( 'sample_count' )
__children["Outputs"]["outputs"]["output3"]["type"].setValue( 'ieDisplay' )
__children["Outputs"]["outputs"]["output3"]["data"].setValue( 'sample_count' )
__children["Outputs"]["__uiPosition"].setValue( imath.V2f( -96.0863876, -72.1242294 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/cube2' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( -90.8525696, -43.6452484 ) )
__children["MiniSubdivideMesh"]["enabled"].setValue( False )
__children["MiniSubdivideMesh"]["in"].setInput( __children["CustomAttributes2"]["out"] )
__children["MiniSubdivideMesh"]["filter"].setInput( __children["PathFilter5"]["out"] )
__children["MiniSubdivideMesh"]["level"].setValue( 2 )
__children["MiniSubdivideMesh"]["__uiPosition"].setValue( imath.V2f( -56.0030594, -7.57190895 ) )
__children["PathFilter8"]["paths"].setValue( IECore.StringVectorData( [ '/plane' ] ) )
__children["PathFilter8"]["__uiPosition"].setValue( imath.V2f( -45.1169281, -29.5384178 ) )


del __children

