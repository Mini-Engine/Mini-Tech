import Gaffer
import GafferImage
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["simplex"] = GafferOSL.OSLShader( "simplex" )
parent.addChild( __children["simplex"] )
__children["simplex"].loadShader( "simplex" )
__children["simplex"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Checkerboard"] = GafferImage.Checkerboard( "Checkerboard" )
parent.addChild( __children["Checkerboard"] )
__children["Checkerboard"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLImage"] = GafferOSL.OSLImage( "OSLImage" )
parent.addChild( __children["OSLImage"] )
__children["OSLImage"]["channels"].addChild( Gaffer.NameValuePlug( "", Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "channel", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLImage"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SwitchColor"] = GafferOSL.OSLShader( "SwitchColor" )
parent.addChild( __children["SwitchColor"] )
__children["SwitchColor"].loadShader( "Utility/SwitchColor" )
__children["SwitchColor"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["simplex_flow"] = GafferOSL.OSLShader( "simplex_flow" )
parent.addChild( __children["simplex_flow"] )
__children["simplex_flow"].loadShader( "simplex_flow" )
__children["simplex_flow"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["alligator"] = GafferOSL.OSLShader( "alligator" )
parent.addChild( __children["alligator"] )
__children["alligator"].loadShader( "alligator" )
__children["alligator"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["perlin_flow"] = GafferOSL.OSLShader( "perlin_flow" )
parent.addChild( __children["perlin_flow"] )
__children["perlin_flow"].loadShader( "perlin_flow" )
__children["perlin_flow"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"] = Gaffer.Backdrop( "Backdrop" )
parent.addChild( __children["Backdrop"] )
__children["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Sphere"] = GafferScene.Sphere( "Sphere" )
parent.addChild( __children["Sphere"] )
__children["Sphere"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLObject"] = GafferOSL.OSLObject( "OSLObject" )
parent.addChild( __children["OSLObject"] )
__children["OSLObject"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "P", Gaffer.V3fPlug( "value", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Point ), True, "primitiveVariable", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLObject"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"] = GafferOSL.OSLCode( "OSLCode" )
parent.addChild( __children["OSLCode"] )
__children["OSLCode"]["parameters"].addChild( Gaffer.V3fPlug( "inP", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Point ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.FloatPlug( "Amplitude", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.FloatPlug( "Scale", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.IntPlug( "type", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.V3fPlug( "inN", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Normal ) )
__children["OSLCode"]["out"].addChild( Gaffer.V3fPlug( "outP", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Point ) )
__children["OSLCode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InPoint"] = GafferOSL.OSLShader( "InPoint" )
parent.addChild( __children["InPoint"] )
__children["InPoint"].loadShader( "ObjectProcessing/InPoint" )
__children["InPoint"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MeshNormals"] = GafferScene.MeshNormals( "MeshNormals" )
parent.addChild( __children["MeshNormals"] )
__children["MeshNormals"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"] = Gaffer.Backdrop( "Backdrop1" )
parent.addChild( __children["Backdrop1"] )
__children["Backdrop1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InNormal"] = GafferOSL.OSLShader( "InNormal" )
parent.addChild( __children["InNormal"] )
__children["InNormal"].loadShader( "ObjectProcessing/InNormal" )
__children["InNormal"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 46385 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["simplex"]["parameters"]["start_frequency"].setValue( 0.009999999776482582 )
__children["simplex"]["__uiPosition"].setValue( imath.V2f( -106.858536, 15.8325729 ) )
__children["Checkerboard"]["size"]["y"].setInput( __children["Checkerboard"]["size"]["x"] )
__children["Checkerboard"]["__uiPosition"].setValue( imath.V2f( -36.6846733, 20.4751358 ) )
__children["OSLImage"]["in"].setInput( __children["Checkerboard"]["out"] )
__children["OSLImage"]["channels"]["channel"]["value"].setInput( __children["SwitchColor"]["out"]["out"] )
__children["OSLImage"]["__uiPosition"].setValue( imath.V2f( -36.6846733, 7.27513266 ) )
__children["SwitchColor"]["parameters"]["index"].setValue( 2 )
__children["SwitchColor"]["parameters"]["input0"].setInput( __children["simplex"]["out"]["result"] )
__children["SwitchColor"]["parameters"]["input1"].setInput( __children["simplex_flow"]["out"]["result"] )
__children["SwitchColor"]["parameters"]["input2"].setInput( __children["alligator"]["out"]["result"] )
Gaffer.Metadata.registerValue( __children["SwitchColor"]["parameters"]["input2"], 'noduleLayout:visible', True )
__children["SwitchColor"]["parameters"]["input3"].setInput( __children["perlin_flow"]["out"]["result"] )
Gaffer.Metadata.registerValue( __children["SwitchColor"]["parameters"]["input3"], 'noduleLayout:visible', True )
__children["SwitchColor"]["__uiPosition"].setValue( imath.V2f( -67.4321594, 3.56703949 ) )
__children["simplex_flow"]["parameters"]["start_frequency"].setValue( 0.009999999776482582 )
__children["simplex_flow"]["__uiPosition"].setValue( imath.V2f( -105.689606, 4.16703892 ) )
__children["alligator"]["parameters"]["start_frequency"].setValue( 0.009999999776482582 )
__children["alligator"]["__uiPosition"].setValue( imath.V2f( -106.632172, -9.42486668 ) )
__children["perlin_flow"]["parameters"]["start_frequency"].setValue( 0.009999999776482582 )
__children["perlin_flow"]["__uiPosition"].setValue( imath.V2f( -105.732162, -20.6248684 ) )
__children["Backdrop"]["title"].setValue( 'Noise Shaders' )
__children["Backdrop"]["__uiPosition"].setValue( imath.V2f( -130.63147, 29.9366493 ) )
__children["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -64.8275833 ), imath.V2f( 125.634842, 10 ) ) )
__children["Sphere"]["divisions"].setValue( imath.V2i( 512, 512 ) )
__children["Sphere"]["__uiPosition"].setValue( imath.V2f( 73.3082123, 22.6536255 ) )
__children["OSLObject"]["in"].setInput( __children["Sphere"]["out"] )
__children["OSLObject"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["OSLObject"]["primitiveVariables"]["primitiveVariable"]["value"].setInput( __children["OSLCode"]["out"]["outP"] )
__children["OSLObject"]["__uiPosition"].setValue( imath.V2f( 69.5263367, 7.68070889 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/sphere' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( 91.7798615, 16.6614342 ) )
__children["OSLCode"]["parameters"]["inP"].setInput( __children["InPoint"]["out"]["value"] )
__children["OSLCode"]["parameters"]["Amplitude"].setValue( 0.05000000074505806 )
__children["OSLCode"]["parameters"]["Scale"].setValue( 0.20000000298023224 )
__children["OSLCode"]["parameters"]["type"].setValue( 1 )
__children["OSLCode"]["parameters"]["inN"].setInput( __children["InNormal"]["out"]["value"] )
__children["OSLCode"]["code"].setValue( '#include "mini_noise.osl.h"\n\npoint tP = inP;\n\nfloat d;\n\nif (type == 0)\n{\n\td = fractalAlligatorNoise3D(tP* 1.0/Scale, 2.0, 0.1, 8);\n}\nelse\n{\n\td = fractalSimplexFlowNoise3D(tP * 1.0/Scale, 1.0, 2.0, 1.0, 0.5, 0.5,8);\n}\n\noutP = inP + Amplitude * d * inN;\n\n' )
__children["OSLCode"]["__uiPosition"].setValue( imath.V2f( 50.0158501, 8.28070831 ) )
__children["InPoint"]["__uiPosition"].setValue( imath.V2f( 31.3328705, 14.6462078 ) )
__children["MeshNormals"]["in"].setInput( __children["OSLObject"]["out"] )
__children["MeshNormals"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["MeshNormals"]["__uiPosition"].setValue( imath.V2f( 69.5263367, -3.4681139 ) )
__children["Backdrop1"]["title"].setValue( 'OSL Object' )
__children["Backdrop1"]["__uiPosition"].setValue( imath.V2f( 21.031868, 30.0512524 ) )
__children["Backdrop1"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -52.5991364 ), imath.V2f( 94.1424103, 10 ) ) )
__children["InNormal"]["__uiPosition"].setValue( imath.V2f( 31.7218781, 3.8897593 ) )


del __children

